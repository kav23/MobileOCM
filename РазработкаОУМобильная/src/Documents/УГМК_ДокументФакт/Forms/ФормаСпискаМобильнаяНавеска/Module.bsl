&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ",Элемент.ТекущаяСтрока);
	ОткрытьФорму("Документ.УГМК_ДокументФакт.Форма.ФормаДокументаНавеска",ПараметрыФормы);
	//ОбъектДокумент = ПолучитьОбъектДокумент(Элемент.ТекущаяСтрока);
	//ФормаДокумента = ОбъектДокумент.ПолучитьФорму("Документ.УГМК_ДокументФакт.Форма.ФормаДокументаНавеска");
	//ФормаДокумента.Открыть();
КонецПроцедуры

&НаСервере
Функция  ПолучитьОбъектДокумент(СсылкаДокумент)
	ОбъектДокумент = СсылкаДокумент.ПолучитьОбъект();
	
	
	Возврат ОбъектДокумент;
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	МассивВидимыхГрупп = Новый Массив;
	МассивВидимыхГрупп.Добавить(Элементы.ГруппаВыбораПользователя);
 	УправлениеВидимостью(МассивВидимыхГрупп);	
	УправлениеВидимостьюГруппаРабочееМестоПользователяПоУмолчанию();
	//СписокПользователей = ПолучитьСписокДоступныхПользователей
	//Элементы.Пользователь.СписокВыбора.Очистить();
	//Элементы.Пользователь.СписокВыбора.ЗагрузитьЗначения(СписокПользователей.ВыгрузитьЗначения());

	//ЗаполнитьЗначениеПоУмолчаниюСервер();
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКВыборуТарыДокумента(Команда)
	МассивВидимыхГрупп = Новый Массив;
	МассивВидимыхГрупп.Добавить(Элементы.ГруппаСписокДокументов);
 	УправлениеВидимостью(МассивВидимыхГрупп);	
	УправлениеВидимостьюГруппаРабочееМестоПользователяПоУмолчанию();
	ЗаписатьЗначениеПоУмолчаниюСервер();
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьЗначениеПоУмолчаниюСервер()
	РабочийЦентр = 	ЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, Справочники.УГМК_СостоянияЗаказа.ПодачаШихты, "РабочийЦентр");
	Смена = 		ЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, Справочники.УГМК_СостоянияЗаказа.ПодачаШихты, "Смена");
	Склад = 		ЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, Справочники.УГМК_СостоянияЗаказа.ПодачаШихты, "Склад");
КонецПроцедуры


&НаСервере
Процедура ЗаписатьЗначениеПоУмолчаниюСервер()
	ЗаписатьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, Справочники.УГМК_СостоянияЗаказа.ПодачаШихты, "РабочийЦентр", РабочийЦентр);
	ЗаписатьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, Справочники.УГМК_СостоянияЗаказа.ПодачаШихты, "Смена", Смена);
	ЗаписатьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, Справочники.УГМК_СостоянияЗаказа.ПодачаШихты, "Склад", Склад);
КонецПроцедуры


&НаКлиенте
Процедура УправлениеВидимостью(МассивВидимыхГрупп)
	МассивВсехГрупп = Новый Массив;
	МассивВсехГрупп.Добавить(Элементы.ГруппаСписокДокументов);
	МассивВсехГрупп.Добавить(Элементы.ГруппаВыбораПользователя);
	Для Каждого Элемент из МассивВсехГрупп Цикл
		Если МассивВидимыхГрупп.Найти(Элемент) = Неопределено Тогда
			Элемент.Видимость = Ложь;
		Иначе
			Элемент.Видимость = Истина;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	Перем ТекущийПользователь;
	ПользовательПриИзмененииСервер();
	
	УправлениеВидимостьюГруппаРабочееМестоПользователяПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостьюГруппаРабочееМестоПользователяПоУмолчанию()
	Элементы.ГруппаРабочееМестоПользователяПоУмолчанию.Видимость = ЗначениеЗаполнено(Пользователь);
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	ВведеннноеЗначниеТара= "";
	Если НЕ Копирование Тогда
		Массив = Новый Массив;
		Массив.Добавить(Тип("Строка"));
		ОписаниеТипов = Новый ОписаниеТипов(Массив);
		
	ПараметрыВ = Новый Структура;
	//ПараметрыВ.Вставить("ИмяРеквизита","");
	//ПараметрыВ.Вставить("Значение", 0);
	//ПараметрыВ.Вставить("ЗначениеСтр", 0);
	//ПараметрыВ.Вставить("ЭтоСтрока", );
	//ПараметрыВ.Вставить("РежимПароля", "");
	ПараметрыВ.Вставить("Заголовок","ВВЕДИТЕ НОМЕР ТАРЫ");
	Результат = ОткрытьФормуМодально("Обработка.УГМК_ВводЧисла.Форма.Форма",ПараметрыВ, ЭтаФорма);
	ВведеннноеЗначниеТара = Неопределено;
	Если Результат <> Неопределено тогда
		ВведеннноеЗначниеТара = Формат(Результат.Значение,"ЧГ=");
	//КонецЕсли;
		
		//
		//Если ВвестиЗначение(ВведеннноеЗначниеТара, "Тара", ОписаниеТипов) Тогда
			 НайденнаяТара = ПолучитьТаруПоСтроке(ВведеннноеЗначниеТара);
			 Если ЗначениеЗаполнено(НайденнаяТара) Тогда
				 ПараметрыФормы = Новый Структура;
				 //ДокументОбъект = Документы.УГМК_ДокументФакт.СоздатьДокумент();
				 //ДокументОбъект.Тара = НайденнаяТара;
				 //ПараметрыФормы.Вставить("Ключ",ДокументОбъект);
				 ЗначенияЗаполнения = Новый Структура;
				 НайденныйДокумент = ПолучитьДокументПоТаре(НайденнаяТара);
				 Если ЗначениеЗаполнено(НайденныйДокумент) Тогда
					 ПараметрыФормы.Вставить("Ключ",НайденныйДокумент);
				 КонецЕсли;	 
				 ЗначенияЗаполнения.Вставить("Тара",НайденнаяТара);
				 ЗначенияЗаполнения.Вставить("РабочийЦентр",РабочийЦентр);
				 ЗначенияЗаполнения.Вставить("Склад",Склад);
				 ЗначенияЗаполнения.Вставить("Смена",Смена);
				 ПараметрыФормы.Вставить("ЗначенияЗаполнения",ЗначенияЗаполнения);
				 ОткрытьФорму("Документ.УГМК_ДокументФакт.Форма.ФормаДокументаНавеска",ПараметрыФормы);
			КонецЕсли;		 
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПользовательПриИзмененииСервер()
	Если ЗначениеЗаполнено( Пользователь) тогда
		ТекущийПользователь = Пользователь;
	иначе
		Возврат;
	КонецЕсли;
	ПараметрыПодразделение = Пользователь.УГМК_ОсновноеПодразделение;
	
	СписокСкладов = УГМК_СлужебныйПовторноеИспользование.ПолучитьДоступныеЗначенияДляРабочегоЦентра( ТекущийПользователь, ПараметрыПодразделение, "", "Склады", Ложь);
	Если СписокСкладов.Количество() > 0 тогда
		ПолеСсылка = Новый ПолеКомпоновкиДанных("Склад");
		ЭлементОтбора = Список.Отбор.Элементы.Добавить( Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.ЛевоеЗначение = ПолеСсылка;
		ЭлементОтбора.ПравоеЗначение = СписокСкладов;
	КонецЕсли;
	Элементы.СкладОсновной.СписокВыбора.Очистить();
	Элементы.СкладОсновной.СписокВыбора.ЗагрузитьЗначения(СписокСкладов.ВыгрузитьЗначения());
	
	СписокРабочихЦентров = УГМК_СлужебныйПовторноеИспользование.ПолучитьДоступныеЗначенияДляРабочегоЦентра( ТекущийПользователь, ПараметрыПодразделение, "", "РабочиеЦентры", Ложь);
	Элементы.РабочийЦентрОсновной.СписокВыбора.Очистить();
	Элементы.РабочийЦентрОсновной.СписокВыбора.ЗагрузитьЗначения(СписокРабочихЦентров.ВыгрузитьЗначения());
	Если СписокРабочихЦентров.Количество() > 0 тогда
		ПолеСсылка = Новый ПолеКомпоновкиДанных("РабочийЦентр");
		ЭлементОтбора = Список.Отбор.Элементы.Добавить( Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.ЛевоеЗначение = ПолеСсылка;
		ЭлементОтбора.ПравоеЗначение = СписокРабочихЦентров;
	КонецЕсли;
	
	ПараметрыСеанса.ТекущийПользователь = Пользователь;
	ЗаполнитьЗначениеПоУмолчаниюСервер();
	
КонецПроцедуры


&НаСервере
Функция  ПолучитьТаруПоСтроке(СтрокаПоиска)
	НайденнаяТара = Справочники.УГМК_ТараТехнологическая.НайтиПоРеквизиту("ДляПоиска", СтрокаПоиска);
	Возврат НайденнаяТара;
КонецФункции	

&НаСервере
Функция  ПолучитьДокументПоТаре(Тара)
	НайденныйДокумент = Документы.УГМК_ДокументФакт.НайтиПоРеквизиту("Тара", Тара);
	Возврат НайденныйДокумент;
КонецФункции	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Пользователи.Ссылка
	               |ИЗ
	               |	Справочник.Пользователи КАК Пользователи
	               |ГДЕ
	               |	Пользователи.ПользовательОперативногоУчета";
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	ТаблицаПользователей = РезультатЗапроса.Выгрузить();
	МассивПользователей = ТаблицаПользователей.ВыгрузитьКолонку("Ссылка");
	Элементы.Пользователь.СписокВыбора.Очистить();
	Элементы.Пользователь.СписокВыбора.ЗагрузитьЗначения(МассивПользователей);
КонецПроцедуры

&НаКлиенте
Процедура ВернутьсяКВыборуПользователя(Команда)
	МассивВидимыхГрупп = Новый Массив;
	МассивВидимыхГрупп.Добавить(Элементы.ГруппаВыбораПользователя);
 	УправлениеВидимостью(МассивВидимыхГрупп);	
	УправлениеВидимостьюГруппаРабочееМестоПользователяПоУмолчанию();
КонецПроцедуры



