Перем мПараметрыСвязиСтрокТЧ Экспорт;

Перем ИзмененоИспользоватьВидНорматива Экспорт;
Перем ИзмененоИспользоватьВидВоспроизводства Экспорт;
Перем ИзмененоИспользоватьУказаниеНорматива Экспорт;
Перем ИзмененоИспользоватьФормулы Экспорт;
Перем ИзмененоИспользоватьУправлениеСписанием Экспорт;

Перем НастройкиОтбораНоменклатуры_Копирование Экспорт;


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаЗаполнения".
//
Процедура ОбработкаЗаполнения(Основание)
	
	Если ТипЗнч(Основание) = Тип("СправочникСсылка.Номенклатура") Тогда
		
		НовоеИзделие = ВыходныеИзделия.Добавить();
		НовоеИзделие.Номенклатура 		= Основание;
		НовоеИзделие.ЕдиницаИзмерения 	= Основание.ЕдиницаХраненияОстатков;
		НовоеИзделие.Количество 		= 1;
		НовоеИзделие.ДоляСтоимости 		= 1;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("СправочникСсылка.СпецификацииНоменклатуры") Тогда
		
		// Увеличим на единицу код версии.
		ОснованиеКодВерсии = Основание.КодВерсии;
		
		Если ПустаяСтрока(ОснованиеКодВерсии) Тогда
			ОснованиеКодВерсии = "00000";
		КонецЕсли;
		
		ЧислоКодВерсии = "";
		ПрефиксКодаВерсии = "";
		Для Сч = 1 По СтрДлина(ОснованиеКодВерсии) Цикл
			СимволКода = Сред(ОснованиеКодВерсии, Сч, 1);
			Если Найти("0123456789", СимволКода) > 0 Тогда
				ЧислоКодВерсии = ЧислоКодВерсии + СимволКода;
			Иначе
				ПрефиксКодаВерсии = ПрефиксКодаВерсии + СимволКода;
			КонецЕсли;
		КонецЦикла;
		ДлинаЧЦ = СтрДлина(ЧислоКодВерсии);
		ЧислоКодВерсии = Формат(Число(ЧислоКодВерсии) + 1, "ЧЦ="+ДлинаЧЦ+";ЧВН=;ЧГ=");
		
		// Заполнение реквизитов шапки спецификации.
		Родитель = Основание.Родитель;
		Код = Основание.Код;
		КодВерсии = ПрефиксКодаВерсии + Строка(ЧислоКодВерсии);
		Наименование = Основание.Наименование;
		ВидСпецификации = Основание.ВидСпецификации;
		
		ИспользоватьВозвратныеОтходы = Основание.ИспользоватьВозвратныеОтходы;
		ИспользоватьПараметрыВыпускаПродукции = Основание.ИспользоватьПараметрыВыпускаПродукции;
		ИспользоватьДокументацию = Основание.ИспользоватьДокументацию;
		ИспользоватьВидНорматива = Основание.ИспользоватьВидНорматива;
		ИспользоватьВидВоспроизводства = Основание.ИспользоватьВидВоспроизводства;
		ИспользоватьУказаниеНорматива = Основание.ИспользоватьУказаниеНорматива;
		ИспользоватьФормулы = Основание.ИспользоватьФормулы;
		ИспользоватьУправлениеСписанием = Основание.ИспользоватьУправлениеСписанием;
		
		ВыходныеИзделия.Загрузить(Основание.ВыходныеИзделия.Выгрузить());
		ИсходныеКомплектующие.Загрузить(Основание.ИсходныеКомплектующие.Выгрузить());
		ВозвратныеОтходы.Загрузить(Основание.ВозвратныеОтходы.Выгрузить());
		ПараметрыВыпускаПродукции.Загрузить(Основание.ПараметрыВыпускаПродукции.Выгрузить());
		Документация.Загрузить(Основание.Документация.Выгрузить());
		АвтоподборНоменклатуры.Загрузить(Основание.АвтоподборНоменклатуры.Выгрузить());
		АвтоподборХарактеристики.Загрузить(Основание.АвтоподборХарактеристики.Выгрузить());
		АвтоподборНоменклатурыОтходы.Загрузить(Основание.АвтоподборНоменклатурыОтходы.Выгрузить());
		АвтоподборХарактеристикиОтходы.Загрузить(Основание.АвтоподборХарактеристикиОтходы.Выгрузить());
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения()


// Процедура - обработчик события "ПередЗаписью".
//
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Отказ = Истина;
	
КонецПроцедуры // ПередЗаписью()

Функция УГМК_ПолучитьКодТабличнойЧасти( ИмяТабЧасти) Экспорт
	Если ИмяТабЧасти = "ИсходныеКомплектующие" тогда
		Возврат( 0);
	иначеЕсли ИмяТабЧасти = "ВыходныеИзделия" тогда
		Возврат( 1);
	иначеЕсли ИмяТабЧасти = "ВозвратныеОтходы" тогда
		Возврат( 2);
	иначе
		Сообщить("УГМК_ПолучитьКодТабличнойЧасти: Неожиданное имя табличной части Спецификации "+ИмяТабЧасти);
		Возврат( 9);
	КонецЕсли;
КонецФункции

мПараметрыСвязиСтрокТЧ = Новый Соответствие;
мПараметрыСвязиСтрокТЧ.Вставить("ИсходныеКомплектующие", Новый Структура("СвободныйКлюч, ФлагМодификации", Неопределено, Ложь));
мПараметрыСвязиСтрокТЧ.Вставить("ВозвратныеОтходы", Новый Структура("СвободныйКлюч, ФлагМодификации", Неопределено, Ложь));
