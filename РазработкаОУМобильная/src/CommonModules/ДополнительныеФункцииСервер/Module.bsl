Функция ПроверкаЭтапаАвторизацииСервер() Экспорт
	НастройкиПодключения = Константы.НастройкиПодключения.Получить().Получить();
	Этап = 0;
	Если НЕ ЗначениеЗаполнено(Константы.ID.Получить()) Тогда
		Этап = 1;
	ИначеЕсли ЗначениеЗаполнено(Константы.ID.Получить()) И НастройкиПодключения = Неопределено Тогда
		Этап = 2;
	ИначеЕсли НЕ НастройкиПодключения.УспешнаяПроверка Тогда
		Этап = 3;
	КонецЕсли;
	Возврат Этап	
КонецФункции


Функция СтандартныеНастройкиПодключения()  Экспорт
	Структура = Новый Структура;
	Структура.Вставить("Пользователь","Федоров (администратор)");
	Структура.Вставить("Пароль","");
	Структура.Вставить("Адрес","http://192.168.1.11/DemoEnterprise/ws/DataTransfer.1cws?wsdl");
	Структура.Вставить("URIПространстваИменСервиса","DataTransfer");
	Структура.Вставить("ИмяСервиса","DataTransfer");
	Структура.Вставить("ИмяФункции","Registration");
	Возврат  Структура;
КонецФункции

Процедура ПроверкаИзмененияВерсий() Экспорт

	ТекущаяВерсия = Константы.ВерсияКонфигурации.Получить();
	Если ТекущаяВерсия = Число(Метаданные.Версия) Тогда
		Возврат;
	ИначеЕсли ТекущаяВерсия = 4 ИЛИ ТекущаяВерсия = 0 Тогда
		НастройкиПодключения = Константы.НастройкиПодключения.Получить().Получить();
		Если НастройкиПодключения <> Неопределено Тогда
			НастройкиПодключения.Вставить("УспешнаяПроверка", Ложь);
			Константы.НастройкиПодключения.Установить(Новый ХранилищеЗначения(НастройкиПодключения));
		КонецЕсли;
		
	Иначе
		
	КонецЕсли;
	Константы.ВерсияКонфигурации.Установить(Метаданные.Версия);	
КонецПроцедуры

Процедура ОчисткаБД(УдалятьАвторизацию) Экспорт
	Для Каждого Об Из Метаданные.Документы Цикл
		Выборка =Документы[Об.Имя].Выбрать();
		Пока Выборка.Следующий() Цикл
			Док = Выборка.Ссылка.ПолучитьОбъект();
			Если Док = Неопределено Тогда Продолжить КонецЕсли;
			Если Док.Проведен Тогда
				Док.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			КонецЕсли;
			Док.Удалить();
		КонецЦикла;
	КонецЦикла;

	Для Каждого Рег Из Метаданные.РегистрыСведений Цикл
		Если Рег.РежимЗаписи = Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.Независимый Тогда
			Выборка = РегистрыСведений[Рег.Имя].СоздатьНаборЗаписей();
			Выборка.Записать(Истина);
		КонецЕсли;
	КонецЦикла;

	
	Для Каждого Об Из Метаданные.Справочники Цикл
		Выборка =Справочники[Об.Имя].Выбрать();
		Пока Выборка.Следующий() Цикл
			Спр = Выборка.Ссылка.ПолучитьОбъект();
			Если Спр = Неопределено Тогда Продолжить КонецЕсли;
			Спр.Удалить();
		КонецЦикла;
	КонецЦикла;
	
	ПерерасчетИтогов();
	
	ВыборкаПланов = ПланыОбмена.ОС_ОбменСМобильнымиУстройствами.Выбрать();
	Пока ВыборкаПланов.Следующий() Цикл
		Если ВыборкаПланов.Ссылка = ПланыОбмена.ОС_ОбменСМобильнымиУстройствами.ЭтотУзел() Тогда Продолжить КонецЕсли;
		ПланыОбмена.УдалитьРегистрациюИзменений(ВыборкаПланов.Ссылка);
		Об = ВыборкаПланов.Ссылка.ПолучитьОбъект();
		Об.Удалить();
	КонецЦикла;
	
	Если УдалятьАвторизацию тогда
		Константы.ID.Установить(Неопределено);
		Константы.НастройкиПодключения.Установить(Неопределено);
	КонецЕсли;
КонецПроцедуры

Процедура ПерерасчетИтогов() Экспорт
	Для Каждого Рег Из Метаданные.РегистрыНакопления Цикл
		Если РегистрыНакопления[Рег.Имя].ПолучитьИспользованиеИтогов() Тогда
			РегистрыНакопления[Рег.Имя].ПересчитатьИтоги();
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Рег Из Метаданные.РегистрыСведений Цикл
		Если РегистрыСведений[Рег.Имя].ПолучитьИспользованиеИтогов() Тогда
			РегистрыСведений[Рег.Имя].ПересчитатьИтоги();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура УстановкаКодаСправочникиПриУстановкеНовогоКода(Источник, СтандартнаяОбработка, Префикс) Экспорт
	Префикс = ПланыОбмена.ОС_ОбменСМобильнымиУстройствами.ЭтотУзел().Код + "-";
КонецПроцедуры

Функция ПоискТовараПоШтрихкоду(Штрихкод) Экспорт
    Стр = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,ЕдиницаИзмерения,Количество");
    Рег = РегистрыСведений.Штрихкоды.Выбрать(Новый Структура("Штрихкод",Штрихкод));
    
    Если Рег.Следующий() Тогда
        Стр.Номенклатура = Рег.Владелец;  
        Стр.ХарактеристикаНоменклатуры = Рег.ХарактеристикаНоменклатуры;
        Стр.ЕдиницаИзмерения = Рег.ЕдиницаИзмерения;
        Стр.Количество = 1;
    Иначе
    КонецЕсли; 
    Возврат Стр;
КонецФункции