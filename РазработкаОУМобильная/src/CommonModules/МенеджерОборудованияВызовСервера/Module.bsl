
#Область ПрограммныйИнтерфейс

// Возвращает номер версии библиотеки подключаемого оборудования.
//
Функция ВерсияБиблиотеки() Экспорт
	
	Возврат "1.7.2.0";
	
КонецФункции

// Функция возвращает список подключенного в справочнике ПО
//
Функция ПолучитьСписокОборудования(ТипыПО = Неопределено, Идентификатор = Неопределено) Экспорт
	
	Возврат Справочники.ПодключаемоеОборудование.ПолучитьСписокОборудования(ТипыПО, Идентификатор);
	
КонецФункции

// Функция возвращает имя перечисления из его метаданных
//
Функция ПолучитьИмяТипаОборудования(ТипОборудования) Экспорт

	Результат = Неопределено;
	
	МетаОбъект = ТипОборудования.Метаданные();
	Индекс = Перечисления.ТипыПодключаемогоОборудования.Индекс(ТипОборудования);
	Результат = МетаОбъект.ЗначенияПеречисления[Индекс].Имя;

	Возврат Результат;

КонецФункции

// Получает ссылку предопределенного элемента по его полному имени.
//
Функция ПредопределенныйЭлемент(Знач ПолноеИмяПредопределенного) Экспорт
	
	ИмяПредопределенного = ВРег(ПолноеИмяПредопределенного);
	
	Точка = Найти(ИмяПредопределенного, ".");
	ИмяКоллекции = Лев(ИмяПредопределенного, Точка - 1);
	ИмяПредопределенного = Сред(ИмяПредопределенного, Точка + 1);
	
	Точка = Найти(ИмяПредопределенного, ".");
	ИмяТаблицы = Лев(ИмяПредопределенного, Точка - 1);
	ИмяПредопределенного = Сред(ИмяПредопределенного, Точка + 1);
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1 Ссылка ИЗ &ПолноеИмяТаблицы ГДЕ ИмяПредопределенныхДанных = &ИмяПредопределенного";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолноеИмяТаблицы", ИмяКоллекции + "." + ИмяТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ИмяПредопределенного", ИмяПредопределенного);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Возврат Результат.Выгрузить()[0].Ссылка;
	КонецЕсли;
	
КонецФункции

// Функция возвращает по идентификатору устройства его параметры
//
Функция ПолучитьПараметрыУстройства(Идентификатор) Экспорт
	
	Возврат Справочники.ПодключаемоеОборудование.ПолучитьПараметрыУстройства(Идентификатор);
	
КонецФункции

// Процедура предназначена для сохранения параметров устройства
// в реквизит Параметры типа хранилище значения в элементе справочника
//
Функция СохранитьПараметрыУстройства(ИдентификаторУстройства, Параметры, ПакетнаяПечать) Экспорт
	
	Возврат Справочники.ПодключаемоеОборудование.СохранитьПараметрыУстройства(ИдентификаторУстройства, Параметры, ПакетнаяПечать);
	
КонецФункции

// Функция возвращает структуру с данными устройства
//
Функция ПолучитьДанныеУстройства(ИдентификаторУстройства) Экспорт
	
	Возврат Справочники.ПодключаемоеОборудование.ПолучитьДанныеУстройства(ИдентификаторУстройства);
	
КонецФункции

// Функция получает макет драйвера и сохраняет его во временное хранилище,
// возвращая ссылку на временное хранилище
//
Функция ПолучитьМакетДрайвераССервера(ИдентификаторДрайвера, ИмяМакета) Экспорт
	
	Результат = Неопределено;
	
	Если Не ИдентификаторДрайвера.УстановкаИзМакета Тогда
		ИмяМакета = "";
	Иначе
		Если ПустаяСтрока(ИмяМакета) Тогда
			ИмяМакета = ИдентификаторДрайвера.ИмяПредопределенныхДанных;
		КонецЕсли;
		Если Не ПустаяСтрока(ИмяМакета) Тогда
			Результат = ПоместитьВоВременноеХранилище(ПолучитьОбщийМакет(ИмяМакета));
		КонецЕсли;
	КонецЕсли;
	 
	Возврат Результат;
	
КонецФункции

#КонецОбласти

