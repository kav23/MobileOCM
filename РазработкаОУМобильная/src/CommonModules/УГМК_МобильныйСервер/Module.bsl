&НаСервере
Функция ПолучитьКраткоеПредставлениеПартии(ЗначениеДляПредставления,ТипПартии) Экспорт 
	СтрокаРезультат = "";
	Префикс = "";
	Если ТипПартии = Перечисления.УГМК_ТипПартии.УГМК_ПаспортПартии Тогда
		Префикс = "Ц";
	ИначеЕсли ТипПартии = Перечисления.УГМК_ТипПартии.УГМК_Плавка Тогда
		Префикс = "С";
	ИначеЕсли ТипПартии = Перечисления.УГМК_ТипПартии.УГМК_ПартияСырья Тогда
		Префикс = "Т";
	ИначеЕсли ТипПартии = Перечисления.УГМК_ТипПартии.УГМК_ПаспортПартииСТК Тогда
		Префикс = "П";
	КонецЕсли;
	СтрокаРезультат = Префикс + ЗначениеДляПредставления;
	Возврат СтрокаРезультат;
КонецФункции

&НаСервере
Функция ПолучитьПолноеПредставлениеПартии(ЗначениеДляПредставления,ТипПартии) Экспорт 
	СтрокаРезультат = "";
	Постфикс = "";
	Если ТипПартии = Перечисления.УГМК_ТипПартии.УГМК_ПаспортПартии Тогда
		Постфикс = " (Партия)";
	ИначеЕсли ТипПартии = Перечисления.УГМК_ТипПартии.УГМК_Плавка Тогда
		Постфикс = " (Плавка)";
	ИначеЕсли ТипПартии = Перечисления.УГМК_ТипПартии.УГМК_ПартияСырья Тогда
		Постфикс = " (Сырья)";
	ИначеЕсли ТипПартии = Перечисления.УГМК_ТипПартии.УГМК_ПаспортПартииСТК Тогда
		Постфикс = " (СТК)";
	КонецЕсли;
	СтрокаРезультат = СокрЛП(ЗначениеДляПредставления) + Постфикс;
	Возврат СтрокаРезультат;
КонецФункции

&НаСервере
Функция ПрефиксВидаОперации(ВидОперации) Экспорт 
	Префикс = "П-";
	Если ВидОперации = Справочники.УГМК_СостоянияЗаказа.ОписьМеталла Тогда
		Префикс = "О-";
	ИначеЕсли ВидОперации = Справочники.УГМК_СостоянияЗаказа.Кооперация Тогда
		Префикс = "У-";
	КонецЕсли;
	Возврат Префикс;
КонецФункции

&НаСервере
Функция ПредставлениеВидОперации(ВидОперации) Экспорт 
	Представление = "Список документов";
	Если ВидОперации = Справочники.УГМК_СостоянияЗаказа.ОписьМеталла Тогда
		Представление = "Описи металла";
	ИначеЕсли ВидОперации = Справочники.УГМК_СостоянияЗаказа.Кооперация Тогда
		Представление = "Универсальный буфер";
	КонецЕсли;
	Возврат Представление;
КонецФункции

&НаСервере
Функция КоличествоПолучитьСВесовНаСервере(АдресВесов) Экспорт
	КоличествоВес = Неопределено;
	Если ЗначениеЗаполнено(АдресВесов) Тогда 
		ДанныеБирка = Неопределено;
		АдресВебСервиса = Константы.АдресВебСервиса.Получить();
		ПарольПользователя = Константы.ПарольПользователя.Получить();
		ПользовательЦентральнойБазы = Константы.ПользовательЦентральнойБазы.Получить();
		ВСОпределение = Новый WSОпределения(АдресВебСервиса,ПользовательЦентральнойБазы,ПарольПользователя); 
		ВСервис = ВСОпределение.Сервисы.Получить("MobileTransferStr","MobileTransfer"); 
		ВТочкаВхода = ВСервис.ТочкиПодключения.Получить("MobileTransferSoap"); 
		ВОперация = ВТочкаВхода.Интерфейс.Операции.Получить("GetWeight"); 
		ВСПрокси = Новый WSПрокси(ВСОпределение, "MobileTransferStr","MobileTransfer","MobileTransferSoap");
		ВСПрокси.Пользователь = "update1c"; 
		ВСПрокси.Пароль = "St7658"; 
		ДанныеВесов = ВСПрокси.GetWeight(АдресВесов);
		Если ДанныеВесов <> Неопределено Тогда
			СтруктураРезультата = Десериализовать(ДанныеВесов.Получить());
			Если СтруктураРезультата.ДанныеПолучены Тогда
				КоличествоВес = СтруктураРезультата.Вес;
				Попытка
					Соединение = Новый HTTPСоединение(СокрЛП(СтруктураРезультата.Адрес),80,,,,5);  
					Заголовки = Новый Соответствие();
					Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded; charset=Windows-1251");
					Запрос = Новый HTTPЗапрос("/alert", Заголовки);
					ОтветСервера = Соединение.Получить(Запрос);          // Ответ от контроллера
				исключение
				КонецПопытки;
			Иначе
				Сообщить(СтруктураРезультата.ОшибкаСообщение);
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	Возврат КоличествоВес;
КонецФункции
