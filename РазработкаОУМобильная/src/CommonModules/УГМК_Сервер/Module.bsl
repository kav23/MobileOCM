Процедура РасчетЦеныНоменклатуры_Запуск(Настройка,ПериодЗаполнения=Неопределено) Экспорт
	//ОЦМ Мобильная
	//МодульРегламентныхЗаданий.РасчетЦеныНоменклатуры(Настройка,,ПериодЗаполнения);
КонецПроцедуры        

// УГМК_Начало 27.06.2011 18:05:31 Кунилов А.В. 

Функция ПроверкиПодключенияПрофиляПочты(УчетнаяЗаписьЭлектроннойПочты) Экспорт
	
	Почта = Новый ИнтернетПочта;
	Профиль = Новый ИнтернетПочтовыйПрофиль;
	Профиль.АдресСервераSMTP = УчетнаяЗаписьЭлектроннойПочты.SMTPСервер;
	Профиль.Пользователь	 = УчетнаяЗаписьЭлектроннойПочты.Логин;
	Профиль.АутентификацияPOP3 = СпособPOP3Аутентификации.Обычная;    
	Профиль.АутентификацияSMTP = СпособSMTPАутентификации.ПоУмолчанию; 
	Профиль.ПользовательSMTP = УчетнаяЗаписьЭлектроннойПочты.ЛогинSMTP;
	Профиль.ПарольSMTP = УчетнаяЗаписьЭлектроннойПочты.ПарольSMTP;
	
	Если ЗначениеЗаполнено(УчетнаяЗаписьЭлектроннойПочты.ПортPOP3) Тогда
		Профиль.ПортPOP3		= УчетнаяЗаписьЭлектроннойПочты.ПортPOP3;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(УчетнаяЗаписьЭлектроннойПочты.ПортSMTP) Тогда
		Профиль.ПортSMTP		= УчетнаяЗаписьЭлектроннойПочты.ПортSMTP;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(УчетнаяЗаписьЭлектроннойПочты.ПарольSMTP) Тогда
		Профиль.Пароль		= УчетнаяЗаписьЭлектроннойПочты.ПарольSMTP;
	КонецЕсли; 
	
	Профиль.АдресСервераPOP3 = УчетнаяЗаписьЭлектроннойПочты.POP3Сервер;
	
	Попытка
		Почта.Подключиться(Профиль);
		ПодключениеУстановлено = Истина;
		Почта.Отключиться();
	Исключение
		ПодключениеУстановлено = Ложь;
	КонецПопытки;
	
	Возврат ПодключениеУстановлено;
	
	
КонецФункции

Процедура ОтправитьПакетПисем(УчетнаяЗаписьЭлектроннойПочты = Неопределено,ПакетПисем=Неопределено,СообщениеПользователю="",ТрекОтправкиПисем = Неопределено, АрхироватьВложения = Ложь) Экспорт
	//ОЦМ Мобильная
	//ТрекОтправкиПисем = Новый Массив;
	//Попытка
	//	Если Не (ЗначениеЗаполнено(УчетнаяЗаписьЭлектроннойПочты) и ЗначениеЗаполнено(ПакетПисем)) Тогда
	//		СообщениеПользователю = "Не выбрана учетная запись или не сформирован список получателей";
	//		возврат; 	
	//	КонецЕсли; 
	//	Почта = Новый ИнтернетПочта;               
	//	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗаписьЭлектроннойПочты);
	//	
	//	Если ПакетПисем.Количество()>0 Тогда
	//		Попытка
	//			Почта.Подключиться(Профиль);
	//		Исключение
	//			СообщениеПользователю = СообщениеПользователю + "Сервер не отвечает...";
	//			Возврат;
	//		КонецПопытки;
	//		
	//		Для каждого Письмо Из ПакетПисем Цикл
	//			ПисьмоОтправлено = Ложь;
	//			СообщениеПоПисьму = "";
	//			Сообщение = Новый ИнтернетПочтовоеСообщение;
	//			Сообщение.Тема = ?(ЗначениеЗаполнено(Письмо.ТемаПисьма), Письмо.ТемаПисьма, "Без темы");
	//			Сообщение.ИмяОтправителя = Письмо.ИмяОтправителя;
	//			//Если несколько получателей
	//			СтрокаПолучатели = Письмо.Получатели;
	//			ПозицияНайденного = Найти(СтрокаПолучатели,";");
	//			Пока ПозицияНайденного > 0 Цикл
	//				Сообщение.Получатели.Добавить(Лев(СтрокаПолучатели, ПозицияНайденного - 1 ));
	//				СтрокаПолучатели = Сред(СтрокаПолучатели, ПозицияНайденного + 1);
	//				ПозицияНайденного = Найти(СтрокаПолучатели,";");
	//			КонецЦикла;	
	//			
	//			//Сообщение.Получатели.Добавить(Письмо.Получатели);	
	//			Сообщение.Получатели.Добавить(СтрокаПолучатели);
	//			
	//			Если Письмо.Свойство("СлепыеКопии") Тогда
	//				Для каждого тЭл Из Письмо.СлепыеКопии Цикл
	//					Сообщение.СлепыеКопии.Добавить(тЭл);
	//				КонецЦикла; 
	//			КонецЕсли; 
	//			
	//			НесколькоФайлов = Ложь;
	//			Если Письмо.Свойство("Вложения") Тогда
	//				НесколькоФайлов = Истина;
	//			КонецЕсли; 
	//			МассивФайлов = Новый Массив;
	//			
	//			Если АрхироватьВложения = Истина Тогда
	//				ФайлЗипАрхива = ПолучитьИмяВременногоФайла("zip");
	//				ЗаписьЗип = Новый ЗаписьZIPФайла(ФайлЗипАрхива);
	//				
	//				Если НесколькоФайлов Тогда
	//					Для каждого ФайлОтправки Из Письмо.Вложения Цикл
	//						
	//						ВременноеХранилищеФайла = ФайлОтправки.ВременноеХранилищеФайла;
	//						ВремФайл = РаботаСФайлами.ПолучитьИмяКаталога() + "\" + ФайлОтправки.ИмяВложения;
	//						ХранимоеЗначение=ВременноеХранилищеФайла.Получить();
	//						ХранимоеЗначение.Записать(ВремФайл);
	//						ЗаписьЗип.Добавить(ВремФайл);
	//						МассивФайлов.Добавить(ВремФайл);
	//						
	//					КонецЦикла; 
	//					
	//				Иначе
	//					
	//					Если Письмо.Свойство("ВременноеХранилищеФайла") Тогда
	//						ВременноеХранилищеФайла = Письмо.ВременноеХранилищеФайла;
	//						ВремФайл = РаботаСФайлами.ПолучитьИмяКаталога() + "\" + ФайлОтправки.ИмяВложения;
	//						ХранимоеЗначение=ВременноеХранилищеФайла.Получить();
	//						ХранимоеЗначение.Записать(ВремФайл);
	//						ЗаписьЗип.Добавить(ВремФайл);
	//						МассивФайлов.Добавить(ВремФайл);
	//					КонецЕсли; 
	//					
	//				КонецЕсли; 
	//				
	//				ЗаписьЗип.Записать();
	//				МассивФайлов.Добавить(ФайлЗипАрхива);
	//				
	//				Сообщение.Вложения.Добавить(Новый ДвоичныеДанные( ФайлЗипАрхива), "Архив файлов.zip");
	//				
	//			Иначе
	//				Если НесколькоФайлов Тогда
	//					Для каждого ФайлОтправки Из Письмо.Вложения Цикл
	//						
	//						ВременноеХранилищеФайла = ФайлОтправки.ВременноеХранилищеФайла;
	//						ВремФайл = ПолучитьИмяВременногоФайла("xls");
	//						ХранимоеЗначение=ВременноеХранилищеФайла.Получить();
	//						ХранимоеЗначение.Записать(ВремФайл);
	//						МассивФайлов.Добавить(ВремФайл);
	//						Сообщение.Вложения.Добавить(Новый ДвоичныеДанные( ВремФайл), ФайлОтправки.ИмяВложения);
	//						
	//					КонецЦикла; 
	//					
	//				Иначе
	//					
	//					Если Письмо.Свойство("ВременноеХранилищеФайла") Тогда
	//						ВременноеХранилищеФайла = Письмо.ВременноеХранилищеФайла;
	//						ВремФайл = ПолучитьИмяВременногоФайла("xls");
	//						ХранимоеЗначение=ВременноеХранилищеФайла.Получить();
	//						ХранимоеЗначение.Записать(ВремФайл);
	//						МассивФайлов.Добавить(ВремФайл);
	//						Сообщение.Вложения.Добавить(Новый ДвоичныеДанные( ВремФайл), Письмо.ИмяВложения);
	//					КонецЕсли; 
	//					
	//				КонецЕсли; 
	//			КонецЕсли; 
	//			
	//			Сообщение.Отправитель = УчетнаяЗаписьЭлектроннойПочты.АдресЭлектроннойПочты;
	//			Если ЗначениеЗаполнено(Письмо.ТекстПисьма) Тогда 
	//				Текст = Сообщение.Тексты.Добавить(Письмо.ТекстПисьма);
	//				Текст.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
	//			КонецЕсли;
	//			СообщениеПоПисьму = СообщениеПоПисьму + "|Письмо по Контрагентам ["+ Письмо.СписокКонтрагентовВДанных+"] на адрес "+ Письмо.Получатели ;
	//			Попытка
	//				Почта.Послать(Сообщение);	
	//				ПисьмоОтправлено = Истина;
	//				СообщениеПоПисьму = СообщениеПоПисьму+ " отправлено. Файл ["+?(НесколькоФайлов,"",Письмо.ИмяВложения)+"]";
	//			Исключение
	//				СообщениеПоПисьму = СообщениеПоПисьму+ " не отправлено.";
	//				СообщениеПоПисьму = ОписаниеОшибки();
	//			КонецПопытки;
	//			Для каждого ФайлДляУдаления Из МассивФайлов Цикл
	//				УдалитьФайлы(ФайлДляУдаления);  
	//			КонецЦикла; 
	//			ОтчетПоОтправкеПисьма = Новый Структура;
	//			ОтчетПоОтправкеПисьма.Вставить("СообщениеПоПисьму",СообщениеПоПисьму);
	//			ОтчетПоОтправкеПисьма.Вставить("ПисьмоОтправлено",ПисьмоОтправлено);
	//			ТрекОтправкиПисем.Добавить(ОтчетПоОтправкеПисьма);
	//		КонецЦикла; 
	//		Почта.Отключиться();
	//	КонецЕсли;
	//Исключение
	//	СообщениеПользователю = СообщениеПользователю + "Исключение: " + ОписаниеОшибки();
	//КонецПопытки;
	//
КонецПроцедуры


// УГМК_Конец 27.06.2011 18:05:38 Кунилов А.В.

//+ УГМК_isn 16.03.2012 18:24:02
Процедура ОтправитьПисьмо(УчетнаяЗапись, Тема, Получатели, Текст, Вложения) Экспорт 
	//ОЦМ Мобильная
	//
	//Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	//
	//Почта = Новый ИнтернетПочта;
	//Попытка
	//	Почта.Подключиться(Профиль);
	//Исключение
	//	Сообщить("Сервер не отвечает...");
	//	Возврат;
	//КонецПопытки;
	//
	//Сообщение = Новый ИнтернетПочтовоеСообщение;
	//ТемаСообщения = ?(ЗначениеЗаполнено(Тема), Тема, "Без темы");
	//Сообщение.Тема = ТемаСообщения;
	//
	//ИмяОтправителя = УчетнаяЗапись.Наименование;
	//Если не ЗначениеЗаполнено(ИмяОтправителя) тогда
	//	ИмяОтправителя = ИмяПользователя();
	//КонецЕсли;
	//Сообщение.ИмяОтправителя = ИмяОтправителя;
	//
	//Для каждого Получатель Из Получатели Цикл
	//	Сообщение.Получатели.Добавить(Получатель.ЭлектроннаяПочта);
	//КонецЦикла; 
	//
	//Сообщение.Отправитель = УчетнаяЗапись.АдресЭлектроннойПочты;
	//
	//Текст = Сообщение.Тексты.Добавить(Текст);
	//Текст.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;
	//
	//Попытка
	//	Почта.Послать(Сообщение);	
	//	Сообщить("Письмо отправлено.", СтатусСообщения.Важное);
	//Исключение
	//	Сообщить("Письмо не отправлено.", СтатусСообщения.Важное);
	//	Сообщить(ОписаниеОшибки(), СтатусСообщения.Важное);
	//КонецПопытки;
	//
КонецПроцедуры

Процедура ОтправитьПисьма(УчетнаяЗаписьЭлектроннойПочты = Неопределено, ПакетПисем = Неопределено, УдалитьВложения = Ложь) Экспорт
	//ОЦМ Мобильная
	//
	//Попытка
	//	
	//	Если Не (ЗначениеЗаполнено(УчетнаяЗаписьЭлектроннойПочты) и ЗначениеЗаполнено(ПакетПисем)) Тогда
	//		ОбщегоНазначения.СообщитьОбОшибке("Не выбрана учетная запись или не сформирован список получателей");
	//		возврат; 	
	//	КонецЕсли; 
	//	
	//	Почта = Новый ИнтернетПочта;                                            
	//	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗаписьЭлектроннойПочты);
	//	
	//	Если ПакетПисем.Количество()>0 Тогда
	//		
	//		Попытка
	//			Почта.Подключиться(Профиль);
	//		Исключение
	//			ОбщегоНазначения.СообщитьОбОшибке("Сервер не отвечает... " + ОписаниеОшибки());
	//			Возврат;
	//		КонецПопытки;
	//		
	//		Для каждого Письмо Из ПакетПисем Цикл
	//			ПисьмоОтправлено = Ложь;
	//			СообщениеПоПисьму = "";
	//			
	//			Сообщение = Новый ИнтернетПочтовоеСообщение;
	//			Сообщение.Тема = ?(ЗначениеЗаполнено(Письмо.ТемаПисьма), Письмо.ТемаПисьма, "Без темы");
	//			ИмяОтправителя = УчетнаяЗаписьЭлектроннойПочты.Наименование;
	//			Если не ЗначениеЗаполнено(ИмяОтправителя) тогда
	//				ИмяОтправителя = ИмяПользователя();
	//			КонецЕсли;
	//			Сообщение.ИмяОтправителя = ИмяОтправителя;
	//			
	//			Для каждого Получатель Из Письмо.Получатели Цикл
	//				Сообщение.Получатели.Добавить(Получатель);
	//			КонецЦикла; 
	//			
	//			Вложения = Неопределено;
	//			Если Письмо.Свойство("Вложения", Вложения) И Вложения <> Неопределено Тогда
	//				Для каждого Вложение Из Вложения Цикл
	//					Сообщение.Вложения.Добавить(Вложение);
	//				КонецЦикла; 
	//			КонецЕсли; 
	//			Сообщение.Отправитель = УчетнаяЗаписьЭлектроннойПочты.АдресЭлектроннойПочты;
	//			Если ЗначениеЗаполнено(Письмо.ТекстПисьма) Тогда 
	//				Текст = Сообщение.Тексты.Добавить(Письмо.ТекстПисьма);
	//				Текст.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
	//			КонецЕсли;
	//			СообщениеПоПисьму = СообщениеПоПисьму + "Письмо ["+ Письмо.Имя+"]";
	//			Попытка
	//				Почта.Послать(Сообщение);	
	//				ПисьмоОтправлено = Истина;
	//				СообщениеПоПисьму = СообщениеПоПисьму+ " отправлено.";
	//			Исключение
	//				СообщениеПоПисьму = СообщениеПоПисьму+ " не отправлено. " + Символы.ПС + ОписаниеОшибки();
	//			КонецПопытки;
	//			Если ПисьмоОтправлено Тогда
	//				Сообщить(СообщениеПоПисьму, СтатусСообщения.Информация);
	//			Иначе
	//				Сообщить(СообщениеПоПисьму, СтатусСообщения.Внимание);
	//			КонецЕсли; 
	//			
	//			Если УдалитьВложения И Вложения <> Неопределено Тогда
	//				Для каждого Вложение Из Вложения Цикл
	//					УдалитьФайлы(Вложение);
	//				КонецЦикла; 
	//			КонецЕсли; 
	//		КонецЦикла; 
	//		Почта.Отключиться();
	//	КонецЕсли;
	//	
	//Исключение
	//	ОбщегоНазначения.СообщитьОбОшибке("Ошибка. " + ОписаниеОшибки());
	//КонецПопытки;
	//
КонецПроцедуры
//- УГМК_isn 16.03.2012 18:24:02 

Функция Проверить_РольДоступна( ИмяРоли) Экспорт
	//ОЦМ Мобильная
	Возврат Ложь;
	//Возврат( РольДоступна( ИмяРоли));
КонецФункции

Функция ПолучитьВерсиюТребуемойПлатформы() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	| ВерсииПодсистем.ИмяПодсистемы,
	| ВерсииПодсистем.Версия
	|ИЗ
	| РегистрСведений.ВерсииПодсистем КАК ВерсииПодсистем
	|ГДЕ
	| ВерсииПодсистем.ИмяПодсистемы = ""Платформа""";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() ТОгда 
		Возврат Неопределено; 
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ВыборкаДетальныеЗаписи.Следующий(); 
	Возврат ВыборкаДетальныеЗаписи.Версия;
	
КонецФункции

Процедура ЗаписатьСобытияВЖурналРегистрации(СписокСообщений) Экспорт
	//ОЦМ Мобильная
	//Для каждого СтрСообщений из СписокСообщений Цикл
	//	СтруктураСообщения=СтрСообщений.Значение;
	//	Уровень=УровеньЖурналаРегистрации.Информация;
	//	Если СтруктураСообщения.ПредставлениеУровня="Ошибка" Тогда
	//		Уровень=УровеньЖурналаРегистрации.Ошибка;
	//	ИначеЕсли СтруктураСообщения.ПредставлениеУровня="Предупреждение" Тогда
	//		Уровень=УровеньЖурналаРегистрации.Предупреждение;
	//	ИначеЕсли СтруктураСообщения.ПредставлениеУровня="Примечание" Тогда
	//		Уровень=УровеньЖурналаРегистрации.Примечание;
	//	КонецЕсли;
	//	ЗаписьЖурналаРегистрации(СтруктураСообщения.ИмяСобытия,Уровень,,,СтруктураСообщения.Комментарий);
	//КонецЦикла;
КонецПроцедуры
