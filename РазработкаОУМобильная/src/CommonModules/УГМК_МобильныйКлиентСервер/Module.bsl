Функция ОпределитьТочность( ЗначениеЧисло) Экспорт
	ЗначениеСтрока = Формат( ЗначениеЧисло, "ЧРД=.; ЧГ=0");
	ДлинаСтроки = СтрДлина( ЗначениеСтрока);
	Поз = Найти( ЗначениеСтрока, ".");
	
	Точность = 0;
	Если Поз > 0 тогда
		Точность = ДлинаСтроки - Поз;
	КонецЕсли;
	
	Возврат( Точность);
КонецФункции

Функция КоличествоЗнаковТочности( Точность) Экспорт
	Знаков = 5;
	Если Точность = -1 тогда
		Знаков = 0;
	иначеЕсли Точность = 0 тогда
		Знаков = 5;
	иначе
		Знаков = Точность;
	КонецЕсли;
		
	Возврат( Знаков);
КонецФункции

Функция ОкруглитьЗначениеДоТочности( Значение, Точность) Экспорт
	Возврат( Окр( Значение, КоличествоЗнаковТочности( Точность)));
КонецФункции

Функция ФорматПоТочности( Точность) Экспорт
	СтрФормат = "ЧН=0; ЧГ=0";
	Если Точность <> 0 тогда
		СтрФормат = СтрФормат + "; ЧДЦ="+Строка( КоличествоЗнаковТочности( Точность));
	КонецЕсли;
	
	Возврат( СтрФормат);
КонецФункции

&НаКлиенте
Процедура ОбработкаУведомлений(Уведомление,Локальное,Показано,ДопПараметры) Экспорт
	
	ПолученныйШтрихкод = Уведомление.Текст;
	
	Оповестить("Уведомление",ПолученныйШтрихкод);
	//Если ЗначениеЗаполнено(ПолученныйШтрихкод) Тогда
	//	ДополнительныеПараметры = Новый Структура;
	//	ДополнительныеПараметры.Вставить("Форма", ДопПараметры.ЭтаФорма);
	//	ДополнительныеПараметры.Вставить("ПотоковоеСканирование",Истина);
	//	ДополнительныеПараметры.Вставить("СканированиеУведомлением",Истина);
	//	ДопПараметры.ЭтаФорма.ОбработатьПолученныйШтрихкод(ПолученныйШтрихкод, ДополнительныеПараметры);
	//	//ОбработатьПолученныйШтрихкод(ПолученныйШтрихкод, ДополнительныеПараметры);
	//КонецЕсли;
	//#Если МобильноеПриложениеКлиент Тогда
	//ДоставляемыеУведомления.ОтменитьЛокальныеУведомления();
	//#КонецЕсли
	
		
КонецПроцедуры


Процедура ПодключитьСобытиеОповещения() Экспорт
	#Если МобильноеПриложениеКлиент Тогда
		Оп = Новый ОписаниеОповещения("ОбработчикЛокальныхУведомлений", ЭтотОбъект);
		ДоставляемыеУведомления.ПодключитьОбработчикУведомлений(Оп);  
	#КонецЕсли
КонецПроцедуры

Процедура СобытиеОповещения(Сообщение, ДопПараметры = "") Экспорт
	#Если МобильноеПриложениеКлиент Тогда
		Оповестить("УведомлениеШК",Сообщение, "Сканирование ШК");
	#КонецЕсли
КонецПроцедуры

Процедура ОбработчикЛокальныхУведомлений(Уведомление,Локальное,Показано, ДопПараметры) Экспорт
	СобытиеОповещения(Уведомление.Текст);
КонецПроцедуры

//&НаКлиенте
//Процедура ОбработатьПолученныйШтрихкод(ПолученныйШтрихкод, Параметры) Экспорт
//	Перем СтрокаШтрихкода1, ИнформацияБирки;
//	ДобавлятьДубльСтроки = Истина;
//	Объект = Параметры.Объект;
//	Форма = Параметры.Форма;
//	Сообщение = "";
//	РезультатШК = ПолученныйШтрихкод;
//	РезультатШКВвод = "";
//	Если РезультатШК = "" Тогда
//		Возврат;
//	КонецЕсли;	
//	Попытка
//		ТекущийРезультат = "";
//		ТекущийРезультат = РезультатШК;
//		РезультатШК = "";
//		СтрокаШтрихкода1 = СтрЗаменить( ТекущийРезультат, Символы.ВК, "");
//		СтрокаШтрихкода1 = СтрЗаменить( СтрокаШтрихкода1, Символы.ПС, "");
//		ТекстПредупреждения = "";
//		ТекстШапкиПредупреждения = "";
//		Если ПрочитатьСтрокуЭтикетки( СтрокаШтрихкода1, ИнформацияБирки) тогда
//			//ТаблицаМатериалы.Очистить();
//			Если ИнформацияБирки.ДанныеБирки.Количество() > 0 Тогда
//				//				Ждем 8.3.9
//				//#Если  МобильноеПриложениеКлиент  тогда
//				//	Если НЕ СредстваМультимедиа.ПоддерживаетсяСканированиеШтрихКодов() Тогда
//				//		Сообщить("не поддерживает сканирование штрихкода");
//				//		Возврат;
//				//	КонецЕсли; 	
//				//	СредстваМультимедиа.ВоспроизвестиЗвуковоеОповещение(,Истина);
//				//#КонецЕсли
//				Сигнал();
//				//сообщить("1");
//			Иначе	
//				ТекстПредупреждения = "ШК не прочитан";
//				ТекстШапкиПредупреждения = "Внимание!!!";
//				ПараметрыПредупреждения = Новый Структура;
//				ПараметрыПредупреждения.Вставить("ШКПолучен",Истина);
//				ПараметрыПредупреждения.Вставить("ПредупреждениеВыведено",Ложь);
//				ПараметрыПредупреждения.Вставить("ТекстПредупреждения",ТекстПредупреждения);
//				ПараметрыПредупреждения.Вставить("ТекстШапкиПредупреждения",ТекстШапкиПредупреждения);
//				ЗаписатьПараметрыПредупреждения(ПараметрыПредупреждения);
//				//сообщить("2");
//				
//			КонецЕсли;	
//			//сообщить("3");
//			//СредстваМультимедиа.ЗакрытьСканированиеШтрихКодов();
//			//сообщить("4");
//			
//			Для каждого Строка из ИнформацияБирки.ДанныеБирки цикл
//				//сообщить("5");
//				ДобавитьНовуюСтроку = Истина;
//				Если ДобавлятьДубльСтроки Тогда
//					ДобавитьНовуюСтроку = Истина;
//				Иначе
//					СтруктураОтбора = ПолучитьИменаКолонокВерсииОтборВерсия();
//					ЗаполнитьЗначенияСвойств(СтруктураОтбора, Строка);
//					МассивСтрокПоОтбору = Объект.Материалы.НайтиСтроки(СтруктураОтбора);
//					ДобавитьНовуюСтроку = МассивСтрокПоОтбору.Количество() = 0;
//				КонецЕсли;
//				Если ДобавитьНовуюСтроку Тогда
//					НоваяСтрока = Объект.Материалы.Добавить();
//					ЗаполнитьЗначенияСвойств( НоваяСтрока, Строка);
//					НоваяСтрока.Группа = МаксимальныйНомерСтроки() + 1;
//					НоваяСтрока.КоличествоУчетное = Строка.Количество;
//					НоваяСтрока.Датаоперации = ТекущаяДата();
//					НоваяСтрока.Представление = ПредставлениеСтрокиКлиентКратко(НоваяСтрока);
//					ИдентификаторТекущейСтроки = НоваяСтрока.ПолучитьИдентификатор();
//					//Сообщить(ИдентификаторТекущейСтроки);
//					Форма.Элементы.Материалы.ТекущаяСтрока = ИдентификаторТекущейСтроки;
//					//Сообщить("Тек строка "+ Строка(Элементы.Материалы.ТекущаяСтрока));
//					ТекстПредупреждения = ТекстПредупреждения + ?(ЗначениеЗаполнено(ТекстПредупреждения),"
//					|","") + ПредставлениеСтрокиПредупреждение(НоваяСтрока); 
//					ТекстШапкиПредупреждения = "Добавлена";
//					Модифицированность = Истина;
//					//сообщить("7");
//					НоваяСтрока.КоличествоПредставление = Формат(НоваяСтрока.Количество,УГМК_МобильныйКлиентСервер.ФорматПоТочности( УГМК_МобильныйКлиентСервер.ОпределитьТочность(НоваяСтрока.Количество)));
//					
//					//КонецЕсли;
//				Иначе
//					ИдентификаторТекущейСтроки = МассивСтрокПоОтбору[0].ПолучитьИдентификатор();
//					Форма.Элементы.Материалы.ТекущаяСтрока = ИдентификаторТекущейСтроки;
//					ТекстПредупреждения = ТекстПредупреждения + ?(ЗначениеЗаполнено(ТекстПредупреждения),"
//					|","") + ПредставлениеСтрокиПредупреждение(МассивСтрокПоОтбору[0]);
//					ТекстШапкиПредупреждения = "Строка есть";
//					//сообщить("8");
//				КонецЕсли;
//				//сообщить("9");
//				
//			КонецЦикла;
//			ПараметрыПредупреждения = Новый Структура;
//			ПараметрыПредупреждения.Вставить("ШКПолучен",Истина);
//			ПараметрыПредупреждения.Вставить("ПредупреждениеВыведено",Ложь);
//			ПараметрыПредупреждения.Вставить("ТекстПредупреждения",ТекстПредупреждения);
//			ПараметрыПредупреждения.Вставить("ТекстШапкиПредупреждения",ТекстШапкиПредупреждения);
//			ЗаписатьПараметрыПредупреждения(ПараметрыПредупреждения);
//			//сообщить("10");
//		КонецЕсли;
//		Результат = "";
//	Исключение
//		сообщить(ОписаниеОшибки());
//		//сообщить("10.5");
//		РезультатШК = ТекущийРезультат + РезультатШК;
//	КонецПопытки;
//	ЗакрытьИнтерфейс = Истина;
//	ОткрытьИнтерфейсПосле = Истина;
//	//Сообщить( "Закрытиие сканирования ");
//	//Иначе
//	//	Текст = "Ошибка: " + Сообщение;
//		//сообщить("11");
//	//КонецЕсли;
//	
//	Если ЗакрытьИнтерфейс Тогда
//		//сообщить("12");
//		ОбновитьОтображениеИнформацииШапка();
//		Если НЕ ЗначениеЗаполнено(ТекстПредупреждения) Тогда 
//			ТекстПредупреждения = "ШК не получен";
//			//сообщить("13");
//		КонецЕсли;	
//		Если НЕ ЗначениеЗаполнено(ТекстШапкиПредупреждения) Тогда 
//			ТекстШапкиПредупреждения = "ШК не найден";
//			//сообщить("14");
//		КонецЕсли;	
//		ЗаписатьПараметрыСеансаИдетСканирование(Ложь);
//		ПараметрыПредупреждения = ПараметрыПредупреждения();
//		Если ПараметрыПредупреждения.ШКПолучен И (НЕ ПараметрыПредупреждения.ПредупреждениеВыведено) Тогда
//			//Предупреждение(ПараметрыПредупреждения.ТекстПредупреждения,,ПараметрыПредупреждения.ТекстШапкиПредупреждения);
//			ПараметрыПредупреждения.ПредупреждениеВыведено = Истина;
//			ЗаписатьПараметрыПредупреждения(ПараметрыПредупреждения);
//			//ТекущийЭлемент = Элементы.Материалы;
//			//сообщить("15");
//		КонецЕсли;	
//		Если Не ПараметрыСеансаИдетСканирование() Тогда
//			ПараметрыПредупреждения = Новый Структура;
//			ПараметрыПредупреждения.Вставить("ШКПолучен",Ложь);
//			ПараметрыПредупреждения.Вставить("ПредупреждениеВыведено",Ложь);
//			ПараметрыПредупреждения.Вставить("ТекстПредупреждения","");
//			ПараметрыПредупреждения.Вставить("ТекстШапкиПредупреждения","");
//			//сообщить("16");
//			//СтрокаШтрихКод = "";
//			//СтартСканироватьКлавиатура();
//			//сообщить("17");
//		КонецЕсли;	
//		//сообщить("18");
//		РедактироватьКоличество = Истина;
//		Если ОткрытьИнтерфейсПосле = Истина Тогда
//			Если РедактироватьКоличество Тогда
//				ИзменитьСтроку(Неопределено, Истина, Параметры.СканированиеУведомлением,Объект,Форма);
//			КонецЕсли;	
//			
//			//ДанныеСтроки = Элементы.Материалы.ДанныеСтроки(Элементы.Материалы.ТекущаяСтрока);
//			//ПараметрыФормы = Новый Структура;
//			//ПараметрыФормы.Вставить("ИзменнитьКоличество",Истина);
//			//ПараметрыФормы.Вставить("Количество",ДанныеСтроки.Количество);
//			//ПараметрыФормы.Вставить("ПродолжитьСКанирование",Истина);
//			//ФормаРедактированияСтроки = ПолучитьФорму("Документ.УГМК_ДокументФакт.Форма.ФормаРедактированияСтроки",ПараметрыФормы);
//			//ЗаполнитьЗначенияСвойств(ФормаРедактированияСтроки, ДанныеСтроки);
//			//ФормаРедактированияСтроки.ИзменитьКоличество = Ложь;
//			//ФормаРедактированияСтроки.КоличествоОсталось = ДанныеСтроки.КоличествоТара + ДанныеСтроки.Количество; 
//			//ФормаРедактированияСтроки.КоличествоВзяли = ДанныеСтроки.Количество; 
//			//ФормаРедактированияСтроки.Открыть();
//			//СканированиеШтрихкода(Неопределено); 
//		КонецЕсли;	
//		//СредстваМультимедиа.ЗакрытьСканированиеШтрихКодов();
//	КонецЕсли;
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура ИзменитьСтроку(Команда, ПродолжитьСкнирование = Ложь, СканированиеУведомлением = Ложь, Объект,Форма)
//	Если НЕ Команда = "СтандартноеРедактирование" Тогда
//		РедактироватьКоличествоПослеСканирования = ПолучитьКонстанту("РедактироватьКоличествоПослеСканирования");
//		Если НЕ РедактироватьКоличествоПослеСканирования Тогда
//			Если ПродолжитьСкнирование И (НЕ СканированиеУведомлением) Тогда
//				СканированиеШтрихкода(Неопределено)	
//			КонецЕсли;
//			Возврат;
//		КонецЕсли;	
//	КонецЕсли;	
//	
//	#Если МобильноеПриложениеКлиент Тогда
//    Параметр = "Уведомление";
// 	#КонецЕсли
//	//Сообщить("Тек строка "+ Строка(Элементы.Материалы.ТекущаяСтрока));
//	ДанныеСтроки = Объект.Материалы.Получить(Форма.Элементы.Материалы.ТекущаяСтрока);
//	Если ДанныеСтроки = Неопределено Тогда 
//		Возврат;
//	КонецЕсли;	
//	ПараметрыФормы = Новый Структура;
//	//Сообщить("Строка 1.1");
//	ПараметрыФормы.Вставить("РаспечататьЭтикетку",ДанныеСтроки.РаспечататьЭтикетку);
//	ПараметрыФормы.Вставить("ИзменнитьКоличество",Истина);
//	ПараметрыФормы.Вставить("Количество",ДанныеСтроки.Количество);
//	ПараметрыФормы.Вставить("ПродолжитьСКанирование",ПродолжитьСкнирование);
//	ПараметрыФормы.Вставить("ВидОперации",ВидОперации);
//	ПараметрыФормы.Вставить("СканированиеУведомлением",СканированиеУведомлением);
//	
//	ФормаРедактированияСтроки = ПолучитьФорму("Документ.УГМК_ДокументФакт.Форма.ФормаРедактированияСтроки",ПараметрыФормы);
//	ЗаполнитьЗначенияСвойств(ФормаРедактированияСтроки, ДанныеСтроки);
//	ФормаРедактированияСтроки.ИзменитьКоличество = Ложь;
//	ФормаРедактированияСтроки.СканированиеУведомлением = СканированиеУведомлением;
//	Если ФормаРедактированияСтроки.Группа = 0 Тогда
//		ФормаРедактированияСтроки.Группа = МаксимальныйНомерСтроки() + 1;
//	КонецЕсли;	
//	ФормаРедактированияСтроки.КоличествоОсталось = ДанныеСтроки.КоличествоТара + ДанныеСтроки.Количество; 
//	ФормаРедактированияСтроки.КоличествоВзяли = ДанныеСтроки.Количество; 
//	ФормаРедактированияСтроки.Открыть();
//	
//КонецПроцедуры

