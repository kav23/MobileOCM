
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	Ответ = Вопрос("Подтвердите",РежимДиалогаВопрос.ДаНет,,,"Сделать синхронизацию?");
	
	Если НЕ Ответ = КодВозвратаДиалога.Да Тогда Возврат КонецЕсли;
	Попытка
		СделатьОбмен();
		СделатьОбмен(Истина);
		Предупреждение("Синхронизация выполнена успешно!",10, "Успех");
	Исключение
		ОбработкаОшибок(ОписаниеОшибки());
		Предупреждение("Синхронизация НЕ выполнена!",10, "Ошибка");
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура СделатьОбмен(ВыгружатьЦеныИОстатки = Ложь)
	СтрЗапроса = Новый Структура;
	СтрЗапроса.Вставить("ИнформацияОКонфигурации", ПолучитьИнфуОКонфигурации());
	СтрЗапроса.Вставить("Логи", СформироватьЛоги());
	СтрЗапроса.Вставить("ТекстЗапросаДляФормированияПакетаОбмена", ТекстЗапросаДляФормированияПакетаОбмена());	
	СтрЗапроса.Вставить("ИнформацияПроОбмен", СформироватьПакетОбменаДляСервера());
	СтрЗапроса.Вставить("ВыгружатьЦеныИОстатки", ВыгружатьЦеныИОстатки);	
	
	
	Ответ = ПодключениеКВебСервисуЦентральнойБД(СтрЗапроса);
	Если ОбработкаОшибок(Ответ.Ошибка) тогда Возврат КонецЕсли;
	ОбработатьОтветЛогов(Ответ.Логи);
	ПринятьИзменениеПоПлану(Ответ.ИнформацияПроОбмен);	
	
	СтрОтвета = Ответ.ПакетОбмена;
	
	Для Каждого ЭлСтр Из СтрОтвета Цикл
		ТипДанных = Метаданные.НайтиПоТипу(ЭлСтр.Ключ);
		Если ЭлСтр.Ключ = Тип("СправочникСсылка.Номенклатура") 
			Или ЭлСтр.Ключ = Тип("СправочникСсылка.Контрагенты")
			Или ЭлСтр.Ключ = Тип("СправочникСсылка.Подразделения")
			Или ЭлСтр.Ключ = Тип("СправочникСсылка.ЕдиницыИзмерения")
			Или ЭлСтр.Ключ = Тип("СправочникСсылка.ХарактеристикиНоменклатуры")
			Или ЭлСтр.Ключ = Тип("СправочникСсылка.Склады")
			Или ЭлСтр.Ключ = Тип("СправочникСсылка.Пользователи")
			Или ЭлСтр.Ключ = Тип("СправочникСсылка.ТипыЦенНоменклатуры")
			Или ЭлСтр.Ключ = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
#Область ПодготовкаКЗагрузкеСправочников			
			СтрРеквизитов = Новый Соответствие;
			СтрРекЭлемента = "";
			СтрРекГруппы = "";
			Для Каждого Рек Из ТипДанных.Реквизиты Цикл
				Если Рек.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента И ЭлСтр.Значение.Колонки.Найти(Рек.Имя) <> Неопределено Тогда
					СтрРекЭлемента = СтрРекЭлемента + Рек.Имя + ",";	
				ИначеЕсли Рек.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы И ЭлСтр.Значение.Колонки.Найти(Рек.Имя) <> Неопределено  Тогда
					СтрРекГруппы = СтрРекГруппы + Рек.Имя + ",";
				ИначеЕсли ЭлСтр.Значение.Колонки.Найти(Рек.Имя) <> Неопределено Тогда	
					СтрРекЭлемента = СтрРекЭлемента + Рек.Имя + ",";
					СтрРекГруппы = СтрРекГруппы + Рек.Имя + ",";
				КонецЕсли;
			КонецЦикла;
			Для Каждого Рек Из ТипДанных.СтандартныеРеквизиты Цикл
				Если ЭлСтр.Значение.Колонки.Найти(Рек.Имя) <> Неопределено И НЕ Рек.Имя = "Ссылка" И НЕ Рек.Имя = "ЭтоГруппа" Тогда
					СтрРекЭлемента = СтрРекЭлемента + Рек.Имя + ",";
					СтрРекГруппы = СтрРекГруппы + Рек.Имя + ",";
				КонецЕсли;
			КонецЦикла;
			СтрРеквизитов.Вставить(Истина, Лев(СтрРекГруппы  ,СтрДлина(СтрРекГруппы)   - 1));
			СтрРеквизитов.Вставить(Ложь  , Лев(СтрРекЭлемента,СтрДлина(СтрРекЭлемента) - 1));
			
#КонецОбласти
			ЗагрузкаСправочников(ЭлСтр.Значение,ТипДанных.Имя,СтрРеквизитов);
		ИначеЕсли ЭлСтр.Ключ = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			ЗагрузкаДокументов(ЭлСтр.Значение,ТипДанных)
		КонецЕсли;
	КонецЦикла;
	Если ВыгружатьЦеныИОстатки Тогда
		СозданиеДокументовЦен(Ответ.Цены);
		СозданиеДокументовОстатков(Ответ.Остатки);
	КонецЕсли;
КонецПроцедуры

Процедура ЗагрузкаСправочников(ТЗ, ТипСпр,СтрРеквизитов)
	Для Каждого Стр Из ТЗ Цикл
		Попытка
			ЭтоГруппа = Ложь;
			Если ТЗ.Колонки.Найти("ЭтоГруппа") <> Неопределено Тогда
				ЭтоГруппа = Стр.ЭтоГруппа;
			КонецЕсли;
			
			Если Стр.Ссылка.ПолучитьОбъект() = Неопределено Тогда
				Нов = ?(НЕ этоГруппа,Справочники[ТипСпр].СоздатьЭлемент(), Справочники[ТипСпр].СоздатьГруппу());
				Нов.УстановитьСсылкуНового(Стр.Ссылка);
			Иначе
				Нов = Стр.Ссылка.ПолучитьОбъект();
			КонецЕсли;	
			#Если Клиент Тогда
				Нов = Документы.ЗаказПокупателя.СоздатьДокумент();
			#КонецЕсли
			ЗаполнитьЗначенияСвойств(Нов,Стр,СтрРеквизитов.Получить(ЭтоГруппа));
			Нов.ОбменДанными.Загрузка = Истина;
			Нов.Записать();	
		Исключение
			ЗаписьЛога(Стр.Ссылка, ОписаниеОшибки())
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

Процедура ЗагрузкаДокументов(ТЗ,ТипДанных)
	Для Каждого Стр Из ТЗ Цикл
		Попытка
			Если Стр.Ссылка.ПолучитьОбъект() = Неопределено Тогда
				Нов = Документы[ТипДанных.Имя].СоздатьДокумент();
				Нов.УстановитьСсылкуНового(Стр.Ссылка);
			Иначе
				Нов = Стр.Ссылка.ПолучитьОбъект();
				Нов.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			КонецЕсли;	
			ЗаполнитьЗначенияСвойств(Нов,Стр,,"Ссылка");
			
			Для Каждого Таб Из ТипДанных.ТабличныеЧасти Цикл
				Если ТЗ.Колонки.Найти(Таб.Имя) = Неопределено Тогда Продолжить КонецЕсли;
				Нов[Таб.Имя].Загрузить(Стр[Таб.Имя]);
			КонецЦикла;
			
			Нов.Записать(?(Стр.Проведен, РежимЗаписиДокумента.Проведение,РежимЗаписиДокумента.Запись));	
		Исключение
			ЗаписьЛога(Стр.Ссылка, ОписаниеОшибки())
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

Процедура ЗаписьЛога(Объект, ОписаниеОшибки = "")
	Рег = РегистрыСведений.ОС_Логи.СоздатьНаборЗаписей();
	Рег.Отбор.Объект.Установить(Объект);
	НовРег = Рег.Добавить();
	НовРег.Объект = Объект;
	НовРег.Период = ТекущаяУниверсальнаяДата();
	НовРег.Описание = ОписаниеОшибки;
	Рег.Записать(Истина);	
КонецПроцедуры

Функция СформироватьЛоги()
	Возврат РегистрыСведений.ОС_Логи.СрезПоследних();
КонецФункции

Процедура ОбработатьОтветЛогов(Ответ)
	Если Ответ = "ОК" Тогда
		Рег = РегистрыСведений.ОС_Логи.СоздатьНаборЗаписей();
		Рег.Записать(Истина);	
	КонецЕсли;
КонецПроцедуры

Функция  СформироватьПакетОбменаДляСервера()
	ЗаписьХМЛ = Новый ЗаписьXML;
    ЗаписьХМЛ.УстановитьСтроку();
    Узел = ПланыОбмена.ОС_ОбменСМобильнымиУстройствами.НайтиПоКоду("ЦБ");
    ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
    ЗаписьСообщения.НачатьЗапись(ЗаписьХМЛ,Узел);
	ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(Узел,ЗаписьСообщения.НомерСообщения);
	Пока ВыборкаИзменений.Следующий() Цикл
		ОбОбмена = ВыборкаИзменений.Получить();
		Если ТипЗнч(ОбОбмена) = Тип("РегистрСведенийНаборЗаписей.ОС_ПрисоединенныеФайлы") Тогда
			ОбОбмена.Отбор.МобильноеУстройство.Установить(Константы.ID.Получить());
			Для Каждого Запись Из ОбОбмена Цикл
				Запись.МобильноеУстройство = Константы.ID.Получить();
			КонецЦикла;
			ЗаписатьXML(ЗаписьХМЛ,ОбОбмена);
		ИначеЕсли ТипЗнч(ОбОбмена) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
			СформироватьОбъектДляОбмена(ЗаписьХМЛ, ОбОбмена);
		ИначеЕсли ТипЗнч(ОбОбмена) = Тип("СправочникОбъект.Валюты") Тогда
			ЗаписатьXML(ЗаписьХМЛ,ОбОбмена);
		КонецЕсли;
	КонецЦикла;

    ЗаписьСообщения.ЗакончитьЗапись();
    Возврат ЗаписьХМЛ.Закрыть();   
КонецФункции

Функция СформироватьОбъектДляОбмена(ЗаписьХМЛ, ОбОбмена)
	Структура = Новый Структура;
	Структура.Вставить("ТипОбъекта",ТипЗнч(ОбОбмена)); 
	Для Каждого Рек Из Метаданные.НайтиПоТипу(ТипЗнч(ОбОбмена)).Реквизиты Цикл
		Структура.Вставить(Рек.Имя, ОбОбмена[Рек.Имя]);
	КонецЦикла;
	
	Для Каждого Рек Из Метаданные.НайтиПоТипу(ТипЗнч(ОбОбмена)).СтандартныеРеквизиты Цикл
		Структура.Вставить(Рек.Имя, ОбОбмена[Рек.Имя]);
	КонецЦикла;
	
	Для Каждого Рек Из Метаданные.НайтиПоТипу(ТипЗнч(ОбОбмена)).ТабличныеЧасти Цикл
		Структура.Вставить(Рек.Имя, ОбОбмена[Рек.Имя].Выгрузить());
	КонецЦикла;                                                      
	
	ОбъектXDTO = СериализаторXDTO.ЗаписатьXDTO(Структура);
	ФабрикаXDTO.ЗаписатьXML(ЗаписьХМЛ, ОбъектXDTO);
КонецФункции

Процедура ПринятьИзменениеПоПлану(СтрокаСообщения)
    ЧтениеХМЛ = Новый ЧтениеXML;
    ЧтениеХМЛ.УстановитьСтроку(СтрокаСообщения);
    
    ЧтениеСообщения = ПланыОбмена.СоздатьЧтениеСообщения();
    ЧтениеСообщения.НачатьЧтение(ЧтениеХМЛ);
	ПланыОбмена.УдалитьРегистрациюИзменений(ЧтениеСообщения.Отправитель,ЧтениеСообщения.НомерПринятого);
	Пока ВозможностьЧтенияXML(ЧтениеХМЛ) Цикл
		Данные = ПрочитатьXML(ЧтениеХМЛ);
		Если Данные <> Неопределено Тогда
			Данные.ОбменДанными.Отправитель = ЧтениеСообщения.Отправитель;
			Данные.ОбменДанными.Загрузка = Истина;
			Данные.Записать();
		КонецЕсли;
	КонецЦикла;
	
	ЧтениеСообщения.ЗакончитьЧтение();    
КонецПроцедуры


Функция ТекстЗапросаДляФормированияПакетаОбмена()
	Возврат "ВЫБРАТЬ
	        |	Объект.Ссылка КАК Ссылка,
	        |	Объект.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	        |	Объект.Ссылка.Родитель КАК Родитель,
	        |	Объект.Ссылка.ЭтоГруппа КАК ЭтоГруппа,
	        |	Объект.Ссылка.Код КАК Код,
	        |	Объект.Ссылка.Наименование КАК Наименование,
	        |	Объект.Ссылка.Артикул КАК Артикул,
	        |	Объект.Ссылка.Комментарий КАК Комментарий,
	        |	Объект.Ссылка.НаименованиеПолное КАК НаименованиеПолное
	        |ИЗ
	        |	Справочник.Номенклатура.Изменения КАК Объект
	        |ГДЕ
	        |	Объект.Узел = &Узел
	        |	И НЕ Объект.Ссылка.Ссылка ЕСТЬ NULL 
	        |АВТОУПОРЯДОЧИВАНИЕ
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Объект.Ссылка КАК Ссылка,
	        |	Объект.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	        |	Объект.Ссылка.Родитель КАК Родитель,
	        |	Объект.Ссылка.ЭтоГруппа КАК ЭтоГруппа,
	        |	Объект.Ссылка.Код КАК Код,
	        |	Объект.Ссылка.Наименование КАК Наименование,
	        |	Объект.Ссылка.ИНН КАК ИНН,
	        |	Объект.Ссылка.КодПоОКПО КАК КодПоОКПО,
	        |	Объект.Ссылка.Комментарий КАК Комментарий,
	        |	Объект.Ссылка.НаименованиеПолное КАК НаименованиеПолное
	        |ИЗ
	        |	Справочник.Контрагенты.Изменения КАК Объект
	        |ГДЕ
	        |	Объект.Узел = &Узел
	        |	И НЕ Объект.Ссылка.Ссылка ЕСТЬ NULL 
	        |АВТОУПОРЯДОЧИВАНИЕ
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Объект.Ссылка КАК Ссылка,
	        |	Объект.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	        |	Объект.Ссылка.Номер КАК Номер,
	        |	Объект.Ссылка.Дата КАК Дата,
	        |	Объект.Ссылка.Проведен КАК Проведен,
	        |	Объект.Ссылка.Комментарий КАК Комментарий,
	        |	Объект.Ссылка.Контрагент КАК Контрагент,
	        |	ВЫРАЗИТЬ(Объект.Ссылка.СкладГруппа КАК Справочник.Склады) КАК СкладГруппа,
	        |	Объект.Ссылка.Товары.(
	        |		Количество КАК Количество,
	        |		Номенклатура КАК Номенклатура,
	        |		Сумма КАК Сумма,
	        |		Цена КАК Цена,
	        |		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	        |		ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	        |	) КАК Товары
	        |ИЗ
	        |	Документ.ЗаказПокупателя.Изменения КАК Объект
	        |ГДЕ
	        |	Объект.Узел = &Узел
	        |	И НЕ Объект.Ссылка.Ссылка ЕСТЬ NULL 
	        |АВТОУПОРЯДОЧИВАНИЕ
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Объект.Ссылка КАК Ссылка,
	        |	Объект.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	        |	Объект.Ссылка.Родитель КАК Родитель,
	        |	Объект.Ссылка.Код КАК Код,
	        |	Объект.Ссылка.Наименование КАК Наименование
	        |ИЗ
	        |	Справочник.Подразделения.Изменения КАК Объект
	        |ГДЕ
	        |	Объект.Узел = &Узел
	        |	И НЕ Объект.Ссылка.Ссылка ЕСТЬ NULL 
	        |АВТОУПОРЯДОЧИВАНИЕ
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Объект.Ссылка КАК Ссылка,
	        |	Объект.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	        |	ВЫРАЗИТЬ(Объект.Ссылка.Владелец КАК Справочник.Номенклатура) КАК Владелец,
	        |	Объект.Ссылка.Код КАК Код,
	        |	Объект.Ссылка.Наименование КАК Наименование,
	        |	Объект.Ссылка.Вес КАК Вес,
	        |	Объект.Ссылка.Объем КАК Объем,
	        |	Объект.Ссылка.Коэффициент КАК Коэффициент
	        |ИЗ
	        |	Справочник.ЕдиницыИзмерения.Изменения КАК Объект
	        |ГДЕ
	        |	Объект.Узел = &Узел
	        |	И НЕ Объект.Ссылка.Ссылка ЕСТЬ NULL 
	        |АВТОУПОРЯДОЧИВАНИЕ
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Объект.Ссылка КАК Ссылка,
	        |	Объект.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	        |	Объект.Ссылка.Код КАК Код,
	        |	Объект.Ссылка.Наименование КАК Наименование,
	        |	Объект.Ссылка.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	        |	ВЫРАЗИТЬ(Объект.Ссылка.ТипЦен КАК Справочник.ТипыЦенНоменклатуры) КАК ТипЦен,
	        |	Объект.Ссылка.ЧислоДнейРезерваБезОплаты КАК ЧислоДнейРезерваБезОплаты,
	        |	Объект.Ссылка.ВидДоговора КАК ВидДоговора,
			|	Объект.Ссылка.Владелец КАК Владелец
	        |ИЗ
	        |	Справочник.ДоговорыКонтрагентов.Изменения КАК Объект
	        |ГДЕ
	        |	Объект.Узел = &Узел
	        |	И НЕ Объект.Ссылка.Ссылка ЕСТЬ NULL 
	        |АВТОУПОРЯДОЧИВАНИЕ
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Объект.Ссылка КАК Ссылка,
	        |	Объект.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	        |	ВЫРАЗИТЬ(Объект.Ссылка.Владелец КАК Справочник.Номенклатура) КАК Владелец,
	        |	Объект.Ссылка.Наименование КАК Наименование
	        |ИЗ
	        |	Справочник.ХарактеристикиНоменклатуры.Изменения КАК Объект
	        |ГДЕ
	        |	Объект.Узел = &Узел
	        |	И НЕ Объект.Ссылка.Ссылка ЕСТЬ NULL 
	        |АВТОУПОРЯДОЧИВАНИЕ
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Объект.Ссылка КАК Ссылка,
	        |	Объект.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	        |	Объект.Ссылка.Родитель КАК Родитель,
	        |	Объект.Ссылка.ЭтоГруппа КАК ЭтоГруппа,
	        |	Объект.Ссылка.Код КАК Код,
	        |	Объект.Ссылка.Комментарий КАК Комментарий,
	        |	Объект.Ссылка.ТипЦенРозничнойТорговли КАК ТипЦенРозничнойТорговли,
	        |	Объект.Ссылка.Наименование КАК Наименование
	        |ИЗ
	        |	Справочник.Склады.Изменения КАК Объект
	        |ГДЕ
	        |	Объект.Узел = &Узел
	        |	И НЕ Объект.Ссылка.Ссылка ЕСТЬ NULL 
	        |АВТОУПОРЯДОЧИВАНИЕ
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Объект.Ссылка КАК Ссылка,
	        |	Объект.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	        |	Объект.Ссылка.Родитель КАК Родитель,
	        |	Объект.Ссылка.ЭтоГруппа КАК ЭтоГруппа,
	        |	Объект.Ссылка.Наименование КАК Наименование
	        |ИЗ
	        |	Справочник.Пользователи.Изменения КАК Объект
	        |ГДЕ
	        |	Объект.Узел = &Узел
	        |	И НЕ Объект.Ссылка.Ссылка ЕСТЬ NULL 
	        |АВТОУПОРЯДОЧИВАНИЕ
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Объект.Ссылка КАК Ссылка,
	        |	Объект.Ссылка.ПометкаУдаления КАК ПометкаУдаления,
	        |	Объект.Ссылка.Код КАК Код,
	        |	Объект.Ссылка.Наименование КАК Наименование
	        |ИЗ
	        |	Справочник.ТипыЦенНоменклатуры.Изменения КАК Объект
	        |ГДЕ
	        |	Объект.Узел = &Узел
	        |	И НЕ Объект.Ссылка.Ссылка ЕСТЬ NULL 
	        |АВТОУПОРЯДОЧИВАНИЕ"
КонецФункции
	
Процедура СозданиеДокументовЦен(СериализованныйОбъект)
	Об = Десериализовать(СериализованныйОбъект);
	Об.Дата = МестноеВремя(Об.Дата);	
	Об.Записать(РежимЗаписиДокумента.Проведение);
КонецПроцедуры

Процедура СозданиеДокументовОстатков(Массив)
	Для Каждого Док Из Массив Цикл	
		Об = Десериализовать(Док);
		Об.Дата = МестноеВремя(Об.Дата);	
		Об.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
КонецПроцедуры