&НаКлиенте
Процедура ПроверитьПодключениеКВебСервису(Команда)
	ОткрытьФорму("ОбщаяФорма.АдресВебСервиса",,,,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);	
КонецПроцедуры


&НаКлиенте
Процедура УзлыОбмена(Команда)
	ОткрытьФорму("ПланОбмена.УГМК_ОбменСМобильнымиУстройствами.ФормаСписка");	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСканирования(Команда)
	ОткрытьФорму("ОбщаяФорма.НастройкиОбщие");
КонецПроцедуры

&НаКлиенте
Процедура Пустышка(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Выход(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура РегистрацияУстройства(Команда)
	Сообщение = "";
	РегистрацияУстройстваНаСервере(Сообщение);
	Сообщить(Сообщение);
КонецПроцедуры

&НаСервере
Процедура РегистрацияУстройстваНаСервере(Сообщение = "")
	НаборКонстант = Константы.СоздатьНабор();
	НаборКонстант.Прочитать();
	ВСОпределение = Новый WSОпределения(НаборКонстант.АдресВебСервиса,НаборКонстант.ПользовательЦентральнойБазы,НаборКонстант.ПарольПользователя); 
	ВСервис = ВСОпределение.Сервисы.Получить("MobileTransferStr","MobileTransfer"); 
	ВТочкаВхода = ВСервис.ТочкиПодключения.Получить("MobileTransferSoap"); 
	ВОперация = ВТочкаВхода.Интерфейс.Операции.Получить("Get"); 
	ВСПрокси = Новый WSПрокси(ВСОпределение, "MobileTransferStr","MobileTransfer","MobileTransferSoap");
	ВСПрокси.Пользователь = НаборКонстант.ПользовательЦентральнойБазы; 
	ВСПрокси.Пароль = НаборКонстант.ПарольПользователя; 
	ВебСеривис.ПолучитьСистемнуюИнформациюУстройства();
	СтрИнфо = ВебСеривис.ПолучитьСистемнуюИнформациюУстройства();
	СтруктураПараметров = Новый Структура("СтатусЗапроса, СистемнаяИнформация, ID", "Регистрация", СтрИнфо, Константы.ID.Получить());
	Данные = Новый ХранилищеЗначения(Сериализовать(СтруктураПараметров), Новый СжатиеДанных(9));
	СтруктураВозврат = ВСПрокси.PutReg(Данные);
	СтруктураПараметровМобильногоУстройства = Десериализовать(СтруктураВозврат.Получить());
	Константы.ID.Установить(СтруктураПараметровМобильногоУстройства.ID);
	
	ЭтотУзел = ПланыОбмена.УГМК_ОбменСМобильнымиУстройствами.ЭтотУзел();
	ОбУзла = ЭтотУзел.ПолучитьОбъект();
	ОбУзла.Код = СтруктураПараметровМобильногоУстройства.ДанныеДляНастройкиОбмена.КодУзлаМобУстр;
	ОбУзла.Наименование = Константы.ID.Получить();
	ОбУзла.Записать();
	Попытка
	ГлУзел = СтруктураПараметровМобильногоУстройства.ДанныеДляНастройкиОбмена.УзелГлавнойБазы;
	ГлУзел.Записать();	
	Исключение
		Об = ПланыОбмена.УГМК_ОбменСМобильнымиУстройствами.СоздатьУзел();
		Об.Код = "ЦБ";
		Об.Наименование = "Центральная база данных";
		Об.Записать();		
	КонецПопытки;
	Если ЗначениеЗаполнено(СтруктураПараметровМобильногоУстройства.ОрганизацияБазы) Тогда
		Константы.Организация.Установить(СтруктураПараметровМобильногоУстройства.ОрганизацияБазы);		
	КонецЕсли;	
	Сообщение = Строка(Константы.ID.Получить());
	//Сообщение = "Активность: " + Строка(СтруктураПараметровМобильногоУстройства.Активное) + "Регистрация: " + Строка(СтруктураПараметровМобильногоУстройства.Зарегистрировано);
КонецПроцедуры

&НаСервере
Процедура ПроверкаАктивностиМобильногоУстройстваНаСервере(Сообщение = "")
	Сообщение = "";
	ВСПрокси = ВебСеривис.ПолучитьПрокси();
	СтрИнфо = ВебСеривис.ПолучитьСистемнуюИнформациюУстройства();
	СтруктураПараметров = Новый Структура("СтатусЗапроса, СистемнаяИнформация, ID", "ПроверкаУстройства", СтрИнфо, Константы.ID.Получить());
	Данные = Новый ХранилищеЗначения(Сериализовать(СтруктураПараметров), Новый СжатиеДанных(9));
	СтруктураВозврат = ВСПрокси.PutReg(Данные);
	СтруктураПараметровМобильногоУстройства = Десериализовать(СтруктураВозврат.Получить());
	Сообщение = ?(СтруктураПараметровМобильногоУстройства.Активное, "Устройство активировано " + СтруктураПараметров.ID , "Устройство не активировано" + СтруктураПараметров.ID);
	Если СтруктураПараметровМобильногоУстройства.Активное И ЗначениеЗаполнено(СтруктураПараметровМобильногоУстройства.ОрганизацияБазы) Тогда
		Константы.Организация.Установить(СтруктураПараметровМобильногоУстройства.ОрганизацияБазы);		
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаАктивностиМобильногоУстройства(Команда)
	Сообщение = "";
	ПроверкаАктивностиМобильногоУстройстваНаСервере(Сообщение);
	Сообщить(Сообщение);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьОбразНаСервере(СтрокаЗагрузки = "ЗагрузкаОбраза")
	НаборКонстант = Константы.СоздатьНабор();
	НаборКонстант.Прочитать();
	ВСОпределение = Новый WSОпределения(НаборКонстант.АдресВебСервиса,НаборКонстант.ПользовательЦентральнойБазы,НаборКонстант.ПарольПользователя); 
	ВСервис = ВСОпределение.Сервисы.Получить("MobileTransferStr","MobileTransfer"); 
	ВТочкаВхода = ВСервис.ТочкиПодключения.Получить("MobileTransferSoap"); 
	ВОперация = ВТочкаВхода.Интерфейс.Операции.Получить("Get"); 
	ВСПрокси = Новый WSПрокси(ВСОпределение, "MobileTransferStr","MobileTransfer","MobileTransferSoap");
	ВСПрокси.Пользователь = НаборКонстант.ПользовательЦентральнойБазы; 
	ВСПрокси.Пароль = НаборКонстант.ПарольПользователя; 
	ВебСеривис.ПолучитьСистемнуюИнформациюУстройства();
	СтрИнфо = ВебСеривис.ПолучитьСистемнуюИнформациюУстройства();
	СтруктураПараметров = Новый Структура("СтатусЗапроса, СистемнаяИнформация, ID", СтрокаЗагрузки, СтрИнфо, Константы.ID.Получить());
	
	
	
	Данные = Новый ХранилищеЗначения(Сериализовать(СтруктураПараметров), Новый СжатиеДанных(9));
	СтруктураВозврат = ВСПрокси.PutReg(Данные);
	
	СтруктураПараметровМобильногоУстройства = Десериализовать(СтруктураВозврат.Получить());
	
	//Константы.ID.Установить(СтруктураПараметровМобильногоУстройства.ID);
	//
	//ЭтотУзел = ПланыОбмена.ОбменСМобильнымиУстройствами.ЭтотУзел();
	//ОбУзла = ЭтотУзел.ПолучитьОбъект();
	//ОбУзла.Код = СтруктураПараметровМобильногоУстройства.ДанныеДляНастройкиОбмена.КодУзлаМобУстр;
	//ОбУзла.Наименование = Константы.ID.Получить();
	//ОбУзла.Записать();
	//ГлУзел = СтруктураПараметровМобильногоУстройства.ДанныеДляНастройкиОбмена.УзелГлавнойБазы;
	//ГлУзел.Записать();	
	//Сообщение = Строка(Константы.ID.Получить());
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОбраз(Команда)
	ЗагрузитьОбразНаСервере();
	Сообщить("Начало загрузки: " + Строка(ТекущаяДата()));
	Если Обмен.ВыполнитьСинхронизациюНаСервере() Тогда
		Сообщить("Синхронизация прошла успешно!");
	Иначе
		Сообщить("При синхронизации были ошибки!");
	КонецЕсли; 
	Сообщить("Конец загрузки: " + Строка(ТекущаяДата()));
КонецПроцедуры



#Область ОбработчикиСобытийФормы


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		НастроитьФормуПоЗначениямНастроек();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыЗначенияНастроек" ИЛИ ИмяСобытия = "ВыполненОбмен" Тогда
		
		НастроитьФормуПоЗначениямНастроек();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ОбщегоНазначения.УстановитьШрифт(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбщиеНастройки(Команда)
	ОткрытьФорму("Обработка.НастройкиРегистрации.Форма.НастройкиМобильногоУстройства");
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОчиститьНастройкиРабочихЦентровНаСервере()
	НаборЗаписей = РегистрыСведений.УГМК_НастройкиРабочихЦентров.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьНастройкиРабочихЦентров(Команда)
	ОчиститьНастройкиРабочихЦентровНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНоменклатуру(Команда)
	ЗагрузитьОбразНаСервере("ЗагрузитьНоменклатуру");
	Сообщить("Начало загрузки номенклатуры: " + Строка(ТекущаяДата()));
	Если Обмен.ВыполнитьСинхронизациюНаСервере() Тогда
		Сообщить("Синхронизация прошла успешно!");
	Иначе
		Сообщить("При синхронизации были ошибки!");
	КонецЕсли; 
	Сообщить("Конец загрузки: " + Строка(ТекущаяДата()));
КонецПроцедуры

#КонецОбласти

