Перем ДеревоЗначений, ТекущаяСтрокаДерева;

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "УведомлениеШК" Тогда
		ПолученныйШтрихкод = Параметр;
		ЗаполнитьИнформациюНаСервере(ПолученныйШтрихкод);
		//Если ЗначениеЗаполнено(ПолученныйШтрихкод) Тогда
		//	ДополнительныеПараметры = Новый Структура;
		//	ДополнительныеПараметры.Вставить("Форма", ЭтаФорма);
		//	ДополнительныеПараметры.Вставить("ПотоковоеСканирование",Истина);
		//	ДополнительныеПараметры.Вставить("СканированиеУведомлением",Истина);
		//	ОбработатьПолученныйШтрихкод(ПолученныйШтрихкод, ДополнительныеПараметры);
		//КонецЕсли;
	КонецЕсли;	
КонецПроцедуры


&НаКлиенте
Процедура ОбработатьПолученныйШтрихкод(ПолученныйШтрихкод, Параметры) Экспорт
	
	
КонецПроцедуры

&НаКлиенте
Процедура СканироватьПартию(Команда)
	ЗаписатьПараметрыСеансаИдетСканирование(Истина);
	ПараметрыПредупреждения = Новый Структура;
	ПараметрыПредупреждения.Вставить("ШКПолучен",Ложь);
	ПараметрыПредупреждения.Вставить("ПредупреждениеВыведено",Ложь);
	ПараметрыПредупреждения.Вставить("ТекстПредупреждения", "");
	ПараметрыПредупреждения.Вставить("ТекстШапкиПредупреждения","");
	УГМК_МобильныеУстройства.ЗаписатьПараметрыПредупреждения(ПараметрыПредупреждения);
	#Если  МобильноеПриложениеКлиент  тогда
		Если НЕ СредстваМультимедиа.ПоддерживаетсяСканированиеШтрихКодов() Тогда
			Сообщить("не поддерживает сканирование штрихкода");
			Возврат;
		КонецЕсли; 	
	#КонецЕсли
	ПотоковеоСанирование = Истина;
	ОбработчикСканирования = Новый ОписаниеОповещения("ОбработкаСканирования", ЭтотОбъект);
	ОбработчикЗакрытия = Новый ОписаниеОповещения("ОбработкаЗакрытияИнтерфейса", ЭтотОбъект);
	#Если  МобильноеПриложениеКлиент  тогда
		СредстваМультимедиа.ПоказатьСканированиеШтрихКодов("Камеру на штрихкод", ОбработчикСканирования, ОбработчикЗакрытия,ТипШтрихКода.Двухмерный);
	#КонецЕсли
КонецПроцедуры

&НаСервере
Процедура ЗаписатьПараметрыСеансаИдетСканирование(Значение) Экспорт
		ПараметрыСеанса.ИдетСканирование = Значение;
КонецПроцедуры
&НаКлиенте
Процедура ОбработкаЗакрытияИнтерфейса(ДополнительныеПараметры) Экспорт
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаСканирования(Штрихкод, Результат, Сообщение, ДополнительныеПараметры) Экспорт
	Перем СтрокаШтрихкода1, ИнформацияБирки, ВыводитьПредупреждения;
	ВыводитьПредупреждения = Ложь;
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	#Если МобильноеПриложениеКлиент Тогда
		СредстваМультимедиа.ЗакрытьСканированиеШтрихКодов();
	#КонецЕсли
	ЗаполнитьИнформациюНаСервере(Штрихкод);
	Возврат;
	//Если ЗакрытьИнтерфейс Тогда
		//СредстваМультимедиа.ЗакрытьСканированиеШтрихКодов();
	//КонецЕсли;
	//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Штрихкод);
	//Сообщить(Штрихкод);
	Если Результат Тогда
		СтрокаШтрихкода1 = СтрЗаменить( Штрихкод, Символы.ВК, "");
		СтрокаШтрихкода1 = СтрЗаменить( СтрокаШтрихкода1, Символы.ПС, "");
		ТекстПредупреждения = "";
		ТекстШапкиПредупреждения = "";
		Если УГМК_ОперативныйУчет.ПрочитатьСтрокуЭтикетки( СтрокаШтрихкода1, ИнформацияБирки) тогда
		//Если ПрочитатьСтрокуЭтикетки( СтрокаШтрихкода1, ИнформацияБирки) тогда
			//ТаблицаМатериалы.Очистить();
			Если ИнформацияБирки.ДанныеБирки.Количество() > 0 Тогда
				Сигнал();
				//сообщить("1" + Строка(ТекущаяДата()));
			Иначе	
				ТекстПредупреждения = "ШК не прочитан";
				ТекстШапкиПредупреждения = "Внимание!!!";
				ПараметрыПредупреждения = Новый Структура;
				ПараметрыПредупреждения.Вставить("ШКПолучен",Истина);
				ПараметрыПредупреждения.Вставить("ПредупреждениеВыведено",Ложь);
				ПараметрыПредупреждения.Вставить("ТекстПредупреждения",ТекстПредупреждения);
				ПараметрыПредупреждения.Вставить("ТекстШапкиПредупреждения",ТекстШапкиПредупреждения);
				УГМК_МобильныеУстройства.ЗаписатьПараметрыПредупреждения(ПараметрыПредупреждения);
				//сообщить("2" + Строка(ТекущаяДата()));
				
			КонецЕсли;	
			//сообщить("3" + Строка(ТекущаяДата()));
		Если ВыводитьПредупреждения Тогда	
		#Если МобильноеПриложениеКлиент Тогда
			СредстваМультимедиа.ЗакрытьСканированиеШтрихКодов();
		#КонецЕсли
		КонецЕсли;
			//сообщить("4" + Строка(ТекущаяДата()));
			
			Для каждого Строка из ИнформацияБирки.ДанныеБирки цикл
				//сообщить("5" + Строка(ТекущаяДата()));
				//ДобавитьНовуюСтроку = Истина;
				//Если ДобавлятьДубльСтроки Тогда
				//	ДобавитьНовуюСтроку = Истина;
				//Иначе
				//	СтруктураОтбора = УГМК_МобильныеУстройства.ПолучитьИменаКолонокВерсииОтборВерсия();
				//	ЗаполнитьЗначенияСвойств(СтруктураОтбора, Строка);
				//	Если СтруктураОтбора.Количество1 = 0 Тогда
				//		СтруктураОтбора.Количество1 = СтруктураОтбора.Количество;
				//	КонецЕсли;	
				//	МассивСтрокПоОтбору = объект.Материалы.НайтиСтроки(СтруктураОтбора);
				//	ДобавитьНовуюСтроку = МассивСтрокПоОтбору.Количество() = 0;
				//КонецЕсли;
				//Если ДобавитьНовуюСтроку Тогда
				//	//НоваяСтрока = объект.Материалы.Добавить();
				//	//Если Строка.Количество1 = 0 Тогда
				//	//	Строка.Количество1 = Строка.Количество; 						
				//	//КонецЕсли;	
				//	//ЗаполнитьЗначенияСвойств( НоваяСтрока, Строка);
				//	//НоваяСтрока.КоличествоУчетное = Строка.Количество;
				//	//НоваяСтрока.Датаоперации = ТекущаяДата();
				//	//НоваяСтрока.Представление = УГМК_МобильныеУстройстваКлиент.ПредставлениеСтрокиКлиентКратко(НоваяСтрока);
				//	//ИдентификаторТекущейСтроки = НоваяСтрока.ПолучитьИдентификатор();
				//	//Элементы.Материалы.ТекущаяСтрока = ИдентификаторТекущейСтроки;
				//	//ТекстПредупреждения = ТекстПредупреждения + ?(ЗначениеЗаполнено(ТекстПредупреждения),"
				//	//|","") + УГМК_МобильныеУстройстваКлиент.ПредставлениеСтрокиПредупреждение(НоваяСтрока); 
				//	//ТекстШапкиПредупреждения = "Добавлена";
				//	//Сообщение = ТекстПредупреждения;
				//	Модифицированность = Истина;
				//	РежимВводаНовогоОтвеса = Ложь;
				//	//сообщить("7" + Строка(ТекущаяДата()));
				//	//НоваяСтрока.КоличествоПредставление = Формат(НоваяСтрока.Количество,УГМК_МобильныйКлиентСервер.ФорматПоТочности( УГМК_МобильныйКлиентСервер.ОпределитьТочность(НоваяСтрока.Количество)));
				//	Если НоваяСтрока.Количество1 > НоваяСтрока.Количество Тогда
				//		КоличествоПредставление = НоваяСтрока.Количество1;
				//		//КоличествоПредставление = НоваяСтрока.Количество1 + НоваяСтрока.КоличествоТара;
				//	Иначе
				//		КоличествоПредставление = НоваяСтрока.Количество;
				//		//КоличествоПредставление = НоваяСтрока.Количество + НоваяСтрока.КоличествоТара;
				//	КонецЕсли;
				//	НоваяСтрока.КоличествоПредставление = Формат(КоличествоПредставление,УГМК_МобильныйКлиентСервер.ФорматПоТочности( УГМК_МобильныйКлиентСервер.ОпределитьТочность(КоличествоПредставление)));
				//	Количество = Строка.Количество1;  
				//	
				//	//НоваяСтрока.КоличествоПредставление = Формат(НоваяСтрока.Количество + НоваяСтрока.КоличествоТара,УГМК_МобильныйКлиентСервер.ФорматПоТочности( УГМК_МобильныйКлиентСервер.ОпределитьТочность(НоваяСтрока.Количество + НоваяСтрока.КоличествоТара)));
				//	
				//	//КонецЕсли;
				//Иначе
				//	ИдентификаторТекущейСтроки = МассивСтрокПоОтбору[0].ПолучитьИдентификатор();
				//	Элементы.Материалы.ТекущаяСтрока = ИдентификаторТекущейСтроки;
				//	//ТекстПредупреждения = ТекстПредупреждения + ?(ЗначениеЗаполнено(ТекстПредупреждения),"
				//	//|","") + УГМК_МобильныеУстройстваКлиент.ПредставлениеСтрокиПредупреждение(МассивСтрокПоОтбору[0]);
				//	//ТекстШапкиПредупреждения = "Строка есть";
				//	//сообщить("8" + Строка(ТекущаяДата()));
				//КонецЕсли;
				//сообщить("9" + Строка(ТекущаяДата()));
				
			КонецЦикла;
			ПараметрыПредупреждения = Новый Структура;
			ПараметрыПредупреждения.Вставить("ШКПолучен",Истина);
			ПараметрыПредупреждения.Вставить("ПредупреждениеВыведено",Ложь);
			ПараметрыПредупреждения.Вставить("ТекстПредупреждения",ТекстПредупреждения);
			ПараметрыПредупреждения.Вставить("ТекстШапкиПредупреждения",ТекстШапкиПредупреждения);
			УГМК_МобильныеУстройства.ЗаписатьПараметрыПредупреждения(ПараметрыПредупреждения);
			//сообщить("10" + Строка(ТекущаяДата()));
		КонецЕсли;
		
		ЗакрытьИнтерфейс = Истина;
		ОткрытьИнтерфейсПосле = Истина;
		//Сообщить( "Закрытиие сканирования ");
	Иначе
		Текст = "Ошибка: " + Сообщение;
		//сообщить("11" + Строка(ТекущаяДата()));
	КонецЕсли;
	
	Если ЗакрытьИнтерфейс Тогда
		//сообщить("12" + Строка(ТекущаяДата()));
		//ОбновитьОтображениеИнформацииШагВзяли();
		Если НЕ ЗначениеЗаполнено(ТекстПредупреждения) Тогда 
			ТекстПредупреждения = "ШК не получен";
			//сообщить("13" + Строка(ТекущаяДата()));
		КонецЕсли;	
		Если НЕ ЗначениеЗаполнено(ТекстШапкиПредупреждения) Тогда 
			ТекстШапкиПредупреждения = "ШК не найден";
			//сообщить("14" + Строка(ТекущаяДата()));
		КонецЕсли;	
		ЗаписатьПараметрыСеансаИдетСканирование(Ложь);
		ПараметрыПредупреждения = УГМК_МобильныеУстройства.ПараметрыПредупреждения();
		Если ПараметрыПредупреждения.ШКПолучен И (НЕ ПараметрыПредупреждения.ПредупреждениеВыведено) Тогда
			Если ВыводитьПредупреждения Тогда	
				#Если МобильноеПриложениеКлиент Тогда
					Предупреждение(ПараметрыПредупреждения.ТекстПредупреждения,,ПараметрыПредупреждения.ТекстШапкиПредупреждения);
				#КонецЕсли
			КонецЕсли;	
			ПараметрыПредупреждения.ПредупреждениеВыведено = Истина;
			УГМК_МобильныеУстройства.ЗаписатьПараметрыПредупреждения(ПараметрыПредупреждения);
			//сообщить("15" + Строка(ТекущаяДата()));
		КонецЕсли;	
		#Если МобильноеПриложениеКлиент Тогда
			СредстваМультимедиа.ЗакрытьСканированиеШтрихКодов();
		#КонецЕсли
		//Если Не ПараметрыСеансаИдетСканирование() Тогда
		//	
		//	//ИзменитьСтроку(Неопределено, Истина, );

		//	//ДанныеСтроки = Элементы.Материалы.ДанныеСтроки(Элементы.Материалы.ТекущаяСтрока);
		//	//ПараметрыФормы = Новый Структура;
		//	//ПараметрыФормы.Вставить("ИзменнитьКоличество",Истина);
		//	//ПараметрыФормы.Вставить("Количество",ДанныеСтроки.Количество);
		//	//ПараметрыФормы.Вставить("ПродолжитьСКанирование",Истина);
		//	//ФормаРедактированияСтроки = ПолучитьФорму("Документ.УГМК_ДокументФакт.Форма.ФормаРедактированияСтроки",ПараметрыФормы);
		//	//
		//	//ЗаполнитьЗначенияСвойств(ФормаРедактированияСтроки, ДанныеСтроки);
		//	//ФормаРедактированияСтроки.ИзменитьКоличество = Ложь;
		//	//ФормаРедактированияСтроки.КоличествоОсталось = ДанныеСтроки.КоличествоТара + ДанныеСтроки.Количество; 
		//	//ФормаРедактированияСтроки.КоличествоВзяли = ДанныеСтроки.Количество; 
		//	//ФормаРедактированияСтроки.Открыть();
		//	//ПараметрыПредупреждения = Новый Структура;
		//	//ПараметрыПредупреждения.Вставить("ШКПолучен",Ложь);
		//	//ПараметрыПредупреждения.Вставить("ПредупреждениеВыведено",Ложь);
		//	//ПараметрыПредупреждения.Вставить("ТекстПредупреждения","");
		//	//ПараметрыПредупреждения.Вставить("ТекстШапкиПредупреждения","");
		//	////сообщить("16" + Строка(ТекущаяДата()));
		//	//СтартСканировать();
		//	////сообщить("17" + Строка(ТекущаяДата()));
		//КонецЕсли;	
		//сообщить("18" + Строка(ТекущаяДата()));
		
	КонецЕсли;
	//Предупреждение(ТекстПредупреждения,4,ТекстШапкиПредупреждения);
	//Сообщить(Текст);
КонецПроцедуры


&НаСервере
Процедура ПолучитьИсториюСервер(Значение) Экспорт
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнформациюНаСервере(Значение)
	Текст = "";
			АдресВебСервиса = Константы.АдресВебСервиса.Получить();
	ПарольПользователя = Константы.ПарольПользователя.Получить();
	ПользовательЦентральнойБазы = Константы.ПользовательЦентральнойБазы.Получить();
	
	
	//ВСОпределение = Новый WSОпределения("http://10.35.4.172:4443/center/ws/MobileTransfer.1cws?wsdl","update1c","St7658"); 
	ВСОпределение = Новый WSОпределения(АдресВебСервиса,ПользовательЦентральнойБазы,ПарольПользователя); 
	ВСервис = ВСОпределение.Сервисы.Получить("MobileTransferStr","MobileTransfer"); 
	ВТочкаВхода = ВСервис.ТочкиПодключения.Получить("MobileTransferSoap"); 
	ВОперация = ВТочкаВхода.Интерфейс.Операции.Получить("GetInfoOpis"); 
	ВСПрокси = Новый WSПрокси(ВСОпределение, "MobileTransferStr","MobileTransfer","MobileTransferSoap");
	ВСПрокси.Пользователь = "update1c"; 
	ВСПрокси.Пароль = "St7658"; 
	
	//ВОперация = ВТочкаВхода.Интерфейс.Операции.Получить("DeleteReg"); 
	//ДанныеXDTO = ВСОпределение.ФабрикаXDTO.Создать(ВОперация.Параметры.Получить("Данные").Тип, СтруктураОтвет);
	СтруктураВозврат = Десериализовать(ВСПрокси.GetInfoOpis(Значение).Получить());
	Текст = СтруктураВозврат.Текст;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	РежимЗакрытияСтандартный = Истина;
	СканированиеКомпонентой1С = Константы.СканированиеКомпонентой1С.Получить();
	Элементы.ГруппаСканирование1С.Видимость = СканированиеКомпонентой1С;
	ОбновитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
КонецПроцедуры

Процедура ОбновитьВидимость()


КонецПроцедуры


&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	РежимЗакрытияСтандартный = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура НечитаемаяБирка(Команда)
	ТекИД = "";
	ПараметрыВ = Новый Структура;
	ПараметрыВ.Вставить("Заголовок", "Введите номер бирки");
	Результат = ОткрытьФормуМодально("Обработка.УГМК_ВводЧисла.Форма.ФормаМобильная",ПараметрыВ, ЭтаФорма);
	Если ЗначениеЗаполнено(Результат) Тогда
		ТекИД = СтрЗаменить(строка(Результат.значение)," ","");
		Если ЗначениеЗаполнено(ТекИД) Тогда
			ПолученныйШтрихкод = НечитаемаяБиркаСервер();	
			Если ЗначениеЗаполнено(ПолученныйШтрихкод) Тогда
				ЗаполнитьИнформациюНаСервере(ПолученныйШтрихкод);
			Иначе
				Сообщить("Не найдена бирка в ЦБ");
			КонецЕсли;
		КонецЕсли;	
		
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция НечитаемаяБиркаСервер()
	ДанныеБирка = Неопределено;
	АдресВебСервиса = Константы.АдресВебСервиса.Получить();
	ПарольПользователя = Константы.ПарольПользователя.Получить();
	ПользовательЦентральнойБазы = Константы.ПользовательЦентральнойБазы.Получить();
	ВСОпределение = Новый WSОпределения(АдресВебСервиса,ПользовательЦентральнойБазы,ПарольПользователя); 
	ВСервис = ВСОпределение.Сервисы.Получить("MobileTransferStr","MobileTransfer"); 
	ВТочкаВхода = ВСервис.ТочкиПодключения.Получить("MobileTransferSoap"); 
	ВОперация = ВТочкаВхода.Интерфейс.Операции.Получить("HashPassword"); 
	ВСПрокси = Новый WSПрокси(ВСОпределение, "MobileTransferStr","MobileTransfer","MobileTransferSoap");
	ВСПрокси.Пользователь = "update1c"; 
	ВСПрокси.Пароль = "St7658"; 
	Попытка
		ДанныеБирка = ВСПрокси.GetBirka(ТекИД);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		Сообщить("Нет связи с ЦБ");
	КонецПопытки;
	Если ДанныеБирка = Неопределено Тогда
		ПолученныйШтрихкод = "";
	Иначе	
		ПолученныйШтрихкод = ДанныеБирка.Получить();
	КонецЕсли;	
	Возврат ПолученныйШтрихкод;
КонецФункции

