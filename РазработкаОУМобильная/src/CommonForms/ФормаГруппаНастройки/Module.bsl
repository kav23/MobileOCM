&НаКлиенте
Процедура ПроверитьПодключениеКВебСервису(Команда)
	ОткрытьФорму("ОбщаяФорма.АдресВебСервиса",,,,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);	
КонецПроцедуры


&НаКлиенте
Процедура УзлыОбмена(Команда)
	ОткрытьФорму("ПланОбмена.УГМК_ОбменСМобильнымиУстройствами.ФормаСписка");	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСканирования(Команда)
	ОткрытьФорму("ОбщаяФорма.НастройкиОбщие");
КонецПроцедуры

&НаКлиенте
Процедура Пустышка(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Выход(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура РегистрацияУстройства(Команда)
	ОткрытьФорму("ОбщаяФорма.ФормаРегистрацииУстройства");
	//Сообщение = "";
	//РегистрацияУстройстваНаСервере(Сообщение);
	//Сообщить(Сообщение);
КонецПроцедуры

&НаСервере
Процедура РегистрацияУстройстваНаСервере(Сообщение = "")
	НаборКонстант = Константы.СоздатьНабор();
	НаборКонстант.Прочитать();
	ВСОпределение = Новый WSОпределения(НаборКонстант.АдресВебСервиса,НаборКонстант.ПользовательЦентральнойБазы,НаборКонстант.ПарольПользователя); 
	ВСервис = ВСОпределение.Сервисы.Получить("MobileTransferStr","MobileTransfer"); 
	ВТочкаВхода = ВСервис.ТочкиПодключения.Получить("MobileTransferSoap"); 
	ВОперация = ВТочкаВхода.Интерфейс.Операции.Получить("Get"); 
	ВСПрокси = Новый WSПрокси(ВСОпределение, "MobileTransferStr","MobileTransfer","MobileTransferSoap");
	ВСПрокси.Пользователь = НаборКонстант.ПользовательЦентральнойБазы; 
	ВСПрокси.Пароль = НаборКонстант.ПарольПользователя; 
	ВебСеривис.ПолучитьСистемнуюИнформациюУстройства();
	СтрИнфо = ВебСеривис.ПолучитьСистемнуюИнформациюУстройства();
	СтруктураПараметров = Новый Структура("СтатусЗапроса, СистемнаяИнформация, ID", "Регистрация", СтрИнфо, Константы.ID.Получить());
	Данные = Новый ХранилищеЗначения(Сериализовать(СтруктураПараметров), Новый СжатиеДанных(9));
	СтруктураВозврат = ВСПрокси.PutReg(Данные);
	СтруктураПараметровМобильногоУстройства = Десериализовать(СтруктураВозврат.Получить());
	Константы.ID.Установить(СтруктураПараметровМобильногоУстройства.ID);
	
	ЭтотУзел = ПланыОбмена.УГМК_ОбменСМобильнымиУстройствами.ЭтотУзел();
	ОбУзла = ЭтотУзел.ПолучитьОбъект();
	ОбУзла.Код = СтруктураПараметровМобильногоУстройства.ДанныеДляНастройкиОбмена.КодУзлаМобУстр;
	ОбУзла.Наименование = Константы.ID.Получить();
	ОбУзла.Записать();
	ГлУзел = СтруктураПараметровМобильногоУстройства.ДанныеДляНастройкиОбмена.УзелГлавнойБазы;
	ГлУзел.Записать();	
	//Сообщение = Строка(Константы.ID.Получить());
	//Сообщение = "Активность: " + Строка(СтруктураПараметровМобильногоУстройства.Активное) + "Регистрация: " + Строка(СтруктураПараметровМобильногоУстройства.Зарегистрировано);
КонецПроцедуры

&НаСервере
Процедура ПроверкаАктивностиМобильногоУстройстваНаСервере(Сообщение = "")
	Сообщение = "";
	ВСПрокси = ВебСеривис.ПолучитьПрокси();
	СтрИнфо = ВебСеривис.ПолучитьСистемнуюИнформациюУстройства();
	СтруктураПараметров = Новый Структура("СтатусЗапроса, СистемнаяИнформация, ID", "ПроверкаУстройства", СтрИнфо, Константы.ID.Получить());
	Данные = Новый ХранилищеЗначения(Сериализовать(СтруктураПараметров), Новый СжатиеДанных(9));
	СтруктураВозврат = ВСПрокси.PutReg(Данные);
	СтруктураПараметровМобильногоУстройства = Десериализовать(СтруктураВозврат.Получить());
	Сообщение = ?(СтруктураПараметровМобильногоУстройства.Активное, "Устройство активировано", "Устройство не активировано");
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаАктивностиМобильногоУстройства(Команда)
	Сообщение = "";
	ПроверкаАктивностиМобильногоУстройстваНаСервере(Сообщение);
	Сообщить(Сообщение);
КонецПроцедуры

&НаКлиенте
Процедура НастройкаОборудования(Команда)
	ОткрытьФорму("ОбщаяФорма.Начало");
КонецПроцедуры

&НаКлиенте
Процедура ВнешнийВидПриложения(Команда)
	
	ОткрытьФорму("Обработка.НастройкиПриложения.Форма.ВнешнийВидПриложения",,ЭтаФорма);
	
КонецПроцедуры



#Область ОбработчикиСобытийФормы


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		НастроитьФормуПоЗначениямНастроек();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыЗначенияНастроек" ИЛИ ИмяСобытия = "ВыполненОбмен" Тогда
		
		НастроитьФормуПоЗначениямНастроек();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ОбщегоНазначения.УстановитьШрифт(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключаемоеОборудование(Команда)
	
	ОткрытьФорму("Обработка.НастройкиПриложения.Форма.ПодключаемоеОборудование",, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

