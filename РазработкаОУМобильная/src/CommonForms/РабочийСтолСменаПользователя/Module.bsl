

&НаКлиенте
Процедура Выход(Команда)
	КодОтвета = Вопрос("Выйти из приложения?", РежимДиалогаВопрос.ДаНет, 10, КодВозвратаДиалога.Нет);
	Если КодОтвета = КодВозвратаДиалога.Да Тогда
		ЗавершитьРаботуСистемы();
	КонецЕсли;	
КонецПроцедуры
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		НастроитьФормуПоЗначениямНастроек();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыЗначенияНастроек" ИЛИ ИмяСобытия = "ВыполненОбмен" Тогда
		
		НастроитьФормуПоЗначениямНастроек();
		
	КонецЕсли;
	
КонецПроцедуры



&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ОбщегоНазначения.УстановитьШрифт(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Вход(Команда)
	Если не ЗначениеЗаполнено( НовыйПользователь) тогда
		Возврат;
	иначеЕсли ТекущийПользователь = НовыйПользователь тогда
		ОткрытьФорму("ОбщаяФорма.ФормаОперации");
		ПарметрыСеансаОграниченныйРежим(Ложь);
		Возврат;
	иначеЕсли не ПарольВведенПравильно() тогда
		Предупреждение("Неправильно указан пароль");
		Пароль = "";
		ЭтаФорма.ТекущийЭлемент = Элементы.Пароль;
		Возврат;
	КонецЕсли;
	
	ПарметрыСеансаОграниченныйРежим(Ложь);
	ЭтаФорма.ТекущийЭлемент = Элементы.ТекущийПользователь;
	ТекущийПользователь = НовыйПользователь;
	ПарметрыСеансаТекущийПользовательОбновить();
	ОткрытьФорму("ОбщаяФорма.ФормаОперации");
КонецПроцедуры

&НаСервере
Процедура ПарметрыСеансаТекущийПользовательОбновить()
	ПараметрыСеанса.ТекущийПользователь = ТекущийПользователь;
	ПараметрыСеанса.ОграниченныйРежим = Ложь;
КонецПроцедуры

&НаСервере
Процедура ПарметрыСеансаОграниченныйРежим(ОграниченныйРежим = Истина)
	ПараметрыСеанса.ОграниченныйРежим = ОграниченныйРежим;
	Если ПараметрыСеанса.ОграниченныйРежим Тогда
		ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.ПустаяСсылка();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПарольВведенПравильно()
	АдресВебСервиса = Константы.АдресВебСервиса.Получить();
	ПарольПользователя = Константы.ПарольПользователя.Получить();
	ПользовательЦентральнойБазы = Константы.ПользовательЦентральнойБазы.Получить();
	ВСОпределение = Новый WSОпределения(АдресВебСервиса,ПользовательЦентральнойБазы,ПарольПользователя); 
	ВСервис = ВСОпределение.Сервисы.Получить("MobileTransferStr","MobileTransfer"); 
	ВТочкаВхода = ВСервис.ТочкиПодключения.Получить("MobileTransferSoap"); 
	ВОперация = ВТочкаВхода.Интерфейс.Операции.Получить("HashPassword"); 
	ВСПрокси = Новый WSПрокси(ВСОпределение, "MobileTransferStr","MobileTransfer","MobileTransferSoap");
	ВСПрокси.Пользователь = "update1c"; 
	ВСПрокси.Пароль = "St7658"; 
	ПарольВведенПравильно = ВСПрокси.HashPassword(НовыйПользователь.ИдентификаторПользователяИБ, Пароль);
	Возврат( ПарольВведенПравильно);
КонецФункции

&НаСервере
Функция ПолучитьХеш_SHA1( СтрокаПароля) Экспорт

	НачатьТранзакцию();
	
	ВременныйПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();
    ВременныйПользовательИБ.Имя = Новый УникальныйИдентификатор;
    ВременныйПользовательИБ.Пароль = СтрокаПароля;
    ВременныйПользовательИБ.Записать();
    ВременныйПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ВременныйПользовательИБ.УникальныйИдентификатор);

	ХешBase64 = ВременныйПользовательИБ.СохраняемоеЗначениеПароля;

	ОтменитьТранзакцию();
	
    Возврат ХешBase64;
КонецФункции

&НаКлиенте
Процедура ОграниченныйРежим(Команда)
	ПарметрыСеансаОграниченныйРежим();
	ОткрытьФорму("ОбщаяФорма.ФормаОперации");
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПарольОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	Пароль = Текст;
	Вход(Неопределено);
КонецПроцедуры


//&НаКлиенте
//Процедура УправлениеВидимостью(МассивВидимыхГрупп)
//	МассивВсехГрупп = Новый Массив;
//	МассивВсехГрупп.Добавить(Элементы.ОсновноеМеню);
//	МассивВсехГрупп.Добавить(Элементы.ГруппаОперации);
//	МассивВсехГрупп.Добавить(Элементы.ГруппаОбмен);
//	МассивВсехГрупп.Добавить(Элементы.ГруппаНастройки);
//	Для Каждого Элемент из МассивВсехГрупп Цикл
//		Если МассивВидимыхГрупп.Найти(Элемент) = Неопределено Тогда
//			Элемент.Видимость = Ложь;
//		Иначе
//			Элемент.Видимость = Истина;
//		КонецЕсли;	
//	КонецЦикла;	
//КонецПроцедуры

//&НаКлиенте
//Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
//	Если НЕ Элементы.ОсновноеМеню.Видимость Тогда
//		СтандартнаяОбработка = Ложь;
//		Отказ = Истина;
//		МассивВидимыхГрупп = Новый Массив;
//		МассивВидимыхГрупп.Добавить(Элементы.ОсновноеМеню);
//		УправлениеВидимостью(МассивВидимыхГрупп);
//		Возврат;
//	КонецЕсли;	
//	//Отказ = Элементы.ГруппаВвестиКоличество.Видимость;
//КонецПроцедуры


//&НаКлиенте
//Процедура ПриОткрытии(Отказ)
//		МассивВидимыхГрупп = Новый Массив;
//		МассивВидимыхГрупп.Добавить(Элементы.ОсновноеМеню);
//		УправлениеВидимостью(МассивВидимыхГрупп);
//КонецПроцедуры

