
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОбработатьПолученныйШтрихкод(ПолученныйШтрихкод, Параметры) Экспорт
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПолученныйШтрихкод);
	
КонецПроцедуры

// Возникает при сканировании внутренней камерой устройства
//
&НаКлиенте
Процедура ОбработкаЗакрытияСканирования(ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначения.УстановитьЦветИнформационныхНадписей(ЭтаФорма, "ПояснениеОНедоступностиКамеры");
	
	НаборКонстант = Константы.СоздатьНабор(СписокКонстант());
	НаборКонстант.Прочитать();
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, НаборКонстант, СписокКонстант());
	
	НастроитьФормуПоЗначениямНастроек();
	
	// АдминистративныйРежим
	ОбщегоНазначения.НастроитьФормуПоАдминистративномуРежиму(ЭтаФорма);
	
	Если ЗначениеЗаполнено(ОборудованиеСканирования) Тогда
		ДрайверСканера = ОборудованиеСканирования.ДрайверОборудования;
	КонецЕсли;
	
	НастроитьВидимостьПараметровСканера();
	
	// ОриентацияЭкрана
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// АдминистративныйРежим
	НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
	
	ОпределитьВерсиюДрайверов();
	ОпределитьДоступностьКоманд();
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "ПояснениеОНедоступностиКамеры", "Видимость", Ложь);
	
	#Если МобильноеПриложениеКлиент Тогда
		Если НЕ СредстваМультимедиа.ПоддерживаетсяСканированиеШтрихКодов() Тогда
			Элементы.ТипУстройстваСканирования.СписокВыбора.Удалить(0);
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "ПояснениеОНедоступностиКамеры", "Видимость", Истина);
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененАдминистративныйРежим" Тогда
		// АдминистративныйРежим
		НастроитьФормуПоАдминистративномуРежиму();
		НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
		ОпределитьДоступностьКоманд();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()
	
	// ОриентацияЭкрана
	ПриИзмененииПараметровЭкранаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПередЗакрытиемФормыНастроек(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ЗначениеЗаполнено(ТипУстройстваСканирования) ИЛИ ТипУстройстваСканирования = Перечисления.ТипыУстройствСканирования.ВстроеннаяКамера Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементИзМассива(ПроверяемыеРеквизиты, "ДрайверСканера");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	СохранитьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДрайверСканера(Команда)
	
	ОчиститьСообщения();
	
	#Если МобильноеПриложениеКлиент Тогда
		
		Если НЕ ЗначениеЗаполнено(ДрайверСканера) Тогда
			Возврат;
		КонецЕсли;
		
		МенеджерОборудованияКлиент.УстановитьДрайверИзМакета(ДрайверСканера);
		ОпределитьВерсиюДрайверов();
		ОпределитьДоступностьКоманд();
		
	#Иначе
		ТекстОшибки = НСтр("ru = 'Операция доступна только из мобильного приложения'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура Тест(Команда)
	
	ОчиститьСообщения();
	Отказ = Ложь;
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		СохранитьНаСервере(Отказ);
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		Если ОповеститьОбИзмененииЗначенийНастроек Тогда
			Оповестить("ИзмененыЗначенияНастроек");
		КонецЕсли;
		
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", ЭтаФорма);
	ДополнительныеПараметры.Вставить("ИмяОбработчикаЗакрытияСканирования", "ОбработкаЗакрытияСканирования");
	
	ПодключаемоеОборудованиеКлиент.ПолучитьШтрихкод(ДополнительныеПараметры);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура ФлагАдминистративныйРежимПриИзменении(Элемент)
	// АдминистративныйРежим
	НастроитьДоступностьЭлементовПоАдминистративномуРежиму();
	
	ПодключитьОбработчикОжидания("НастроитьФормуПоАдминистративномуРежимуКлиент", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияАдминистративныйРежимНажатие(Элемент)
	// АдминистративныйРежим
	ОткрытьФорму("Обработка.НастройкиПриложения.Форма.АдминистративныйРежим",,ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ТипУстройстваСканированияПриИзменении(Элемент)
	
	ТипУстройстваСканированияПриИзмененииНаСервере();
	ОпределитьВерсиюДрайверов();
	ОпределитьДоступностьКоманд();
	
КонецПроцедуры

&НаКлиенте
Процедура ДрайверСканераПриИзменении(Элемент)
	
	ДрайверСканераПриИзмененииНаСервере();
	ОпределитьВерсиюДрайверов();
	ОпределитьДоступностьКоманд();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыАдминистративныйРежим

&НаКлиенте
Процедура НастроитьДоступностьЭлементовПоАдминистративномуРежиму()
	
	СписокТолькоПросмотр = "ТипУстройстваСканирования, ДрайверСканера";
	
	СписокДоступность = "Готово";
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, СписокТолькоПросмотр, "ТолькоПросмотр", НЕ АдминистративныйРежим);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, СписокДоступность, "Доступность", АдминистративныйРежим);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьФормуПоАдминистративномуРежимуКлиент()
	
	НастроитьФормуПоАдминистративномуРежиму(Истина);
	Оповестить("ИзмененАдминистративныйРежим");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоАдминистративномуРежиму(УстановитьРежим = Ложь)
	
	ОбщегоНазначения.НастроитьФормуПоАдминистративномуРежиму(ЭтаФорма, УстановитьРежим);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДрайверСканераПриИзмененииНаСервере()
	
	ПодключаемоеОборудование.ОпределитьПодключаемоеОборудование(ДрайверСканера, ОборудованиеСканирования);
	
КонецПроцедуры

&НаСервере
Функция СписокКонстант()
	
	Возврат "ТипУстройстваСканирования, ОборудованиеСканирования";
	
КонецФункции

&НаКлиенте
Процедура СохранитьНаКлиенте() Экспорт
	
	ОчиститьСообщения();
	Отказ = Ложь;
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		СохранитьНаСервере(Отказ);
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		Если ОповеститьОбИзмененииЗначенийНастроек Тогда
			Оповестить("ИзмененыЗначенияНастроек");
		КонецЕсли;
		
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНаСервере(Отказ)
	
	ОбщегоНазначения.СохранитьКонстантыФормы(ЭтаФорма, СписокКонстант(), Отказ);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоЗначениямНастроек()
	
	ОбщегоНазначения.УстановитьШрифт(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьВерсиюДрайверов()
	
	ВерсияДрайвераСканераВМакете = "";
	
	ПодключаемоеОборудованиеКлиент.ПолучитьВерсиюДрайвераОборудования(ЭтаФорма,
		ОборудованиеСканирования,
		ВерсияДрайвераСканера,
		ВерсияДрайвераСканераВМакете,
		ДрайверСканераУстановлен);
	
	Если НЕ ДрайверСканераУстановлен Тогда
		Элементы.ВерсияДрайвераСканера.ЦветТекста = WebЦвета.Кирпичный;
	Иначе
		Элементы.ВерсияДрайвераСканера.ЦветТекста = Новый Цвет;
	КонецЕсли;
	
	ЗаголовокКнопки = НСтр("ru = 'Установить драйвер'");
	
	Если ЗначениеЗаполнено(ВерсияДрайвераСканераВМакете) Тогда
		ЗаголовокКнопки = ЗаголовокКнопки + " (" + ВерсияДрайвераСканераВМакете + ")";
	КонецЕсли;
	
	Элементы.УстановитьДрайверСканераШтрихкодов.Заголовок = ЗаголовокКнопки;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьДоступностьКоманд()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "ДрайверСканера, ВерсияДрайвераСканера, УстановитьДрайверСканераШтрихкодов", "Видимость",
		ЗначениеЗаполнено(ТипУстройстваСканирования) И ТипУстройстваСканирования = ПредопределенноеЗначение("Перечисление.ТипыУстройствСканирования.ВнешнийСканерШтрихкодов"));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "УстановитьДрайверСканераШтрихкодов", "Доступность",
		АдминистративныйРежим И ЗначениеЗаполнено(ОборудованиеСканирования));
	
	#Если МобильноеПриложениеКлиент Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "Тест", "Доступность",
			ДрайверСканераУстановлен ИЛИ ТипУстройстваСканирования = ПредопределенноеЗначение("Перечисление.ТипыУстройствСканирования.ВстроеннаяКамера"));
	#Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "Тест", "Доступность", Ложь);
		
	#КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьПараметровСканера()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭтаФорма, "НастройкиСканера", "Видимость",
		ЗначениеЗаполнено(ТипУстройстваСканирования));
	
КонецПроцедуры

&НаСервере
Процедура ТипУстройстваСканированияПриИзмененииНаСервере()
	
	НастроитьВидимостьПараметровСканера();
	
	Если ЗначениеЗаполнено(ТипУстройстваСканирования)
		И ТипУстройстваСканирования = ПредопределенноеЗначение("Перечисление.ТипыУстройствСканирования.ВнешнийСканерШтрихкодов") Тогда
		
		ДрайверСканера = ПредопределенноеЗначение("Справочник.ДрайверыОборудования.Драйвер1СУстройствоВвода");
	Иначе
		ДрайверСканера = Неопределено;
	КонецЕсли;
	
	ПодключаемоеОборудование.ОпределитьПодключаемоеОборудование(ДрайверСканера, ОборудованиеСканирования);
		
КонецПроцедуры

#КонецОбласти

#Область ОриентацияЭкрана

// ОриентацияЭкрана
&НаСервере
Процедура ПриИзмененииПараметровЭкранаСервер()
	
	ОбщегоНазначения.УстановитьОриентациюЭкрана();
	НастроитьФормуПоОриентацииЭкрана();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоОриентацииЭкрана()
	
КонецПроцедуры


#КонецОбласти

